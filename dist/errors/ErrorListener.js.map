{"version":3,"sources":["../../src/errors/ErrorListener.js"],"names":["ErrorListener","rec","sym","line","col","msg","e","errors","push","antlr4","error"],"mappings":";;;;;;;;;AAoBA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,a;;;;;;;;;;;;;;;;6DACV,E;;;;;;;WAET;AACA,yBAAYC,GAAZ,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,CAAtC,EAAyC;AACvC,UAAID,GAAG,KAAK,8CAAZ,EAA4D;AAC1D;AACA;AACD;;AACD,UAAIA,GAAG,KAAK,wBAAZ,EAAsC;AACpC;AACD;;AACD,UAAIA,GAAG,KAAK,kPAAZ,EAAgQ;AAC9P;AACD;;AACD,WAAKE,MAAL,CAAYC,IAAZ,CAAiB;AAAEL,QAAAA,IAAI,EAAJA,IAAF;AAAQC,QAAAA,GAAG,EAAHA,GAAR;AAAaC,QAAAA,GAAG,EAAHA;AAAb,OAAjB;AACD;;;;EAhBwCI,eAAOC,KAAP,CAAaV,a","sourcesContent":["/*\n * Copyright (c) 2002-2017 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *\n * This file is part of Neo4j.\n *\n * Neo4j is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport antlr4 from 'antlr4';\n\nexport default class ErrorListener extends antlr4.error.ErrorListener {\n  errors = [];\n\n  // eslint-disable-next-line no-unused-vars\n  syntaxError(rec, sym, line, col, msg, e) {\n    if (msg === \"mismatched input '<EOF>' expecting {';', SP}\") {\n      // suppress error about missing semicolon at the end of a query\n      return;\n    }\n    if (msg === \"missing ';' at '<EOF>'\") {\n      return;\n    }\n    if (msg === \"mismatched input '<EOF>' expecting {':',  CYPHER, EXPLAIN, PROFILE, USING, CREATE, DROP, LOAD, WITH, OPTIONAL, MATCH, UNWIND, MERGE, SET, DETACH, DELETE, REMOVE, FOREACH, RETURN, START, CALL, CATALOG, SHOW, STOP, ALTER, GRANT, DENY, REVOKE}\") {\n      return;\n    }\n    this.errors.push({ line, col, msg });\n  }\n}\n"],"file":"ErrorListener.js"}