{"version":3,"sources":["../src/CypherEditorSupport.js"],"names":["CypherEditorSupport","input","PositionConverter","AutoCompletion","version","delay","times","Promise","resolve","reject","update","eventName","cb","listeners","Array","isArray","concat","index","indexOf","splice","args","forEach","trigger","queriesAndCommands","referencesProviders","positionConverter","parseTree","referencesListener","errorListener","parseErrors","errors","statements","completion","updateReferenceProviders","schema","updateSchema","line","column","abs","toAbsolute","getElement","pt","pos","TreeUtils","getPosition","start","stop","c","getChildCount","i","e","getChild","findAnyParent","CypherTypes","SYMBOLIC_CONTEXTS","type","constructor","name","query","VARIABLE_CONTEXT","QUERY_CONTEXT","getReferences","getText","element","getElementForCompletion","CompletionTypeResolver","getTypes","found","types","COMPLETION_CANDIDATES","doFilter","info","getCompletionInfo","prevInfo","replaceRange","from","to","filter","shouldBeReplaced","smartReplaceRange","calculateSmartReplaceRange","toRelative","filterText","items","getItems","elementType","callback","CypherSyntaxHighlight","process"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2002-2017 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *\n * This file is part of Neo4j.\n *\n * Neo4j is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport CompletionTypeResolver from './completion/CompletionTypeResolver';\nimport { AutoCompletion } from './completion/AutoCompletion';\nimport * as CypherTypes from './lang/CypherTypes';\nimport CypherSyntaxHighlight from './highlight/CypherSyntaxHighlight';\nimport TreeUtils from './util/TreeUtils';\nimport PositionConverter from './util/PositionConverter';\nimport retryOperation from './util/retryOperation';\nimport parse from './util/parse';\n\nexport default class CypherEditorSupport {\n  schema = {};\n\n  input = null;\n\n  positionConverter = new PositionConverter('');\n\n  parseTree = null;\n\n  parseErrors = [];\n\n  referencesProviders = {};\n\n  completion = new AutoCompletion();\n\n  queriesAndCommands = [];\n\n  statements = [];\n\n  listeners = [];\n\n  version = 0;\n\n  constructor(input = '') {\n    this.update(input);\n  }\n\n  ensureVersion = (version, delay = 30, times = 5) => retryOperation(\n    () => new Promise((resolve, reject) => {\n      if (version === this.version) {\n        return resolve();\n      }\n      return reject();\n    }),\n    delay,\n    times,\n  );\n\n  on(eventName, cb) {\n    this.listeners[eventName] = Array.isArray(this.listeners[eventName])\n      ? this.listeners[eventName].concat([cb])\n      : (this.listeners[eventName] = [cb]);\n  }\n\n  off(eventName, cb) {\n    if (!this.listeners[eventName]) return;\n    const index = this.listeners[eventName].indexOf(cb);\n    if (index > -1) {\n      this.listeners[eventName].splice(index, 1);\n    }\n  }\n\n  trigger(eventName, args = []) {\n    if (!this.listeners[eventName]) return;\n    this.listeners[eventName].forEach((cb) => cb(...args));\n  }\n\n  update(input = '', version) {\n    this.trigger('update');\n    if (input === this.input) {\n      this.version = version || this.version;\n      this.trigger('updated', [\n        {\n          queriesAndCommands: this.queriesAndCommands,\n          referencesProviders: this.referencesProviders,\n        },\n      ]);\n      return;\n    }\n    this.positionConverter = new PositionConverter(input);\n\n    this.input = input;\n    const {\n      parseTree, referencesListener, errorListener, referencesProviders,\n    } = parse(input);\n    this.parseTree = parseTree;\n\n    this.parseErrors = errorListener.errors;\n\n    const { queriesAndCommands, statements } = referencesListener;\n    this.statements = statements;\n    this.queriesAndCommands = queriesAndCommands;\n    this.referencesProviders = referencesProviders;\n\n    this.completion.updateReferenceProviders(this.referencesProviders);\n    this.version = version || this.version;\n    this.trigger('updated', [\n      {\n        queriesAndCommands: this.queriesAndCommands,\n        referencesProviders: this.referencesProviders,\n      },\n    ]);\n  }\n\n  setSchema(schema) {\n    this.schema = schema;\n    this.completion.updateSchema(this.schema);\n  }\n\n  getElement(line, column) {\n    const abs = this.positionConverter.toAbsolute(line, column);\n\n    function getElement(pt) {\n      const pos = TreeUtils.getPosition(pt);\n      if (pos != null && (abs < pos.start || abs > pos.stop)) {\n        return null;\n      }\n\n      const c = pt.getChildCount();\n      if (c === 0 && pos != null) {\n        return pt;\n      }\n\n      for (let i = 0; i < c; i += 1) {\n        const e = getElement(pt.getChild(i));\n        if (e != null) {\n          return e;\n        }\n      }\n\n      return pos != null ? pt : null;\n    }\n\n    return getElement(this.parseTree);\n  }\n\n  getReferences(line, column) {\n    const e = TreeUtils.findAnyParent(this.getElement(line, column), CypherTypes.SYMBOLIC_CONTEXTS);\n    if (e == null) {\n      return [];\n    }\n\n    const type = e.constructor.name;\n    const query = type === CypherTypes.VARIABLE_CONTEXT\n      ? TreeUtils.findAnyParent(e, [CypherTypes.QUERY_CONTEXT])\n      : null;\n\n    return this.referencesProviders[type].getReferences(e.getText(), query);\n  }\n\n  getCompletionInfo(line, column) {\n    const element = this.getElementForCompletion(line, column);\n    const query = TreeUtils.findAnyParent(element, [CypherTypes.QUERY_CONTEXT]);\n    const { found, types } = CompletionTypeResolver.getTypes(element);\n\n    return {\n      element, query, found, types,\n    };\n  }\n\n  getElementForCompletion(line, column) {\n    const e = this.getElement(line, column);\n    return TreeUtils.findAnyParent(e, CypherTypes.COMPLETION_CANDIDATES) || e;\n  }\n\n  getCompletion(line, column, doFilter = true) {\n    let info = this.getCompletionInfo(line, column);\n\n    // Shift by one symbol back and try again.\n    if (!info.found && column > 0) {\n      const prevInfo = this.getCompletionInfo(line, column - 1);\n      if (prevInfo.found) {\n        info = prevInfo;\n      }\n    }\n    const {\n      element, query, found, types,\n    } = info;\n\n    const replaceRange = {\n      from: { line, column },\n      to: { line, column },\n    };\n    let filter = null;\n\n    const shouldBeReplaced = AutoCompletion.shouldBeReplaced(element);\n    if (found && shouldBeReplaced) {\n      // There are number of situations where we need to be smarter than default behavior\n      const { start, stop } = TreeUtils.getPosition(element);\n      const smartReplaceRange = AutoCompletion.calculateSmartReplaceRange(element, start);\n      if (smartReplaceRange) {\n        replaceRange.from = this.positionConverter.toRelative(smartReplaceRange.start);\n        replaceRange.to = this.positionConverter.toRelative(smartReplaceRange.stop + 1);\n\n        if (smartReplaceRange.filterText) {\n          filter = smartReplaceRange.filterText;\n        }\n      } else {\n        replaceRange.from = this.positionConverter.toRelative(start);\n        replaceRange.to = this.positionConverter.toRelative(stop + 1);\n      }\n    }\n\n    if (filter === null) {\n      filter = doFilter && found && shouldBeReplaced ? element.getText() : '';\n    }\n    return {\n      items: this.completion.getItems(types, {\n        filter,\n        query,\n        elementType: element ? element.constructor.name : 'unknown',\n      }),\n      ...replaceRange,\n    };\n  }\n\n  applyHighlighthing(callback) {\n    CypherSyntaxHighlight.process(this.parseTree, callback);\n  }\n}\n"],"file":"CypherEditorSupport.js"}