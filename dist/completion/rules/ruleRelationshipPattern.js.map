{"version":3,"sources":["../../../src/completion/rules/ruleRelationshipPattern.js"],"names":["element","parent","TreeUtils","findParent","CypherTypes","RELATIONSHIP_PATTERN_CONTEXT","getText","type","CompletionTypes","VARIABLE","RELATIONSHIP_TYPE"],"mappings":";;;;;;;;;AAoBA;;AACA;;AACA;;;;;;;;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;eACe,kBAACA,OAAD,EAAa;AAC1B,MAAMC,MAAM,GAAGC,mBAAUC,UAAV,CAAqBH,OAArB,EAA8BI,WAAW,CAACC,4BAA1C,CAAf;;AACA,MAAIJ,MAAJ,EAAY;AACV;AACA,QAAID,OAAO,CAACM,OAAR,OAAsB,GAA1B,EAA+B;AAC7B,aAAO,CACL;AAAEC,QAAAA,IAAI,EAAEC,eAAe,CAACC;AAAxB,OADK,EAEL;AAAEF,QAAAA,IAAI,EAAEC,eAAe,CAACE;AAAxB,OAFK,CAAP;AAID,KAPS,CAQV;;;AACA,QAAIV,OAAO,CAACM,OAAR,OAAsB,GAA1B,EAA+B;AAC7B,aAAO,EAAP;AACD;AACF;;AACD,SAAO,EAAP;AACD,C","sourcesContent":["/*\n * Copyright (c) 2002-2017 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *\n * This file is part of Neo4j.\n *\n * Neo4j is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as CypherTypes from '../../lang/CypherTypes';\nimport * as CompletionTypes from '../CompletionTypes';\nimport TreeUtils from '../../util/TreeUtils';\n\n// If we are in relationship pattern then return variables and types\nexport default (element) => {\n  const parent = TreeUtils.findParent(element, CypherTypes.RELATIONSHIP_PATTERN_CONTEXT);\n  if (parent) {\n    // We are at the beginning, so allow variables too\n    if (element.getText() === '[') {\n      return [\n        { type: CompletionTypes.VARIABLE },\n        { type: CompletionTypes.RELATIONSHIP_TYPE },\n      ];\n    }\n    // We are at the end, fail and allow algorithm to get back by 1 char\n    if (element.getText() === ']') {\n      return [];\n    }\n  }\n  return [];\n};\n"],"file":"ruleRelationshipPattern.js"}