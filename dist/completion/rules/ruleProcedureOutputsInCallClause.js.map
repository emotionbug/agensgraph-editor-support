{"version":3,"sources":["../../../src/completion/rules/ruleProcedureOutputsInCallClause.js"],"names":["element","call","TreeUtils","findAnyParent","CypherTypes","CALL_CONTEXT","procedure","findChild","PROCEDURE_NAME_CONTEXT","resultOutput","PROCEDURE_RESULTS_CONTEXT","type","CompletionTypes","PROCEDURE_OUTPUT","name","getText"],"mappings":";;;;;;;;;AAoBA;;AACA;;AACA;;;;;;;;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;eACe,kBAACA,OAAD,EAAa;AAC1B,MAAMC,IAAI,GAAGC,mBAAUC,aAAV,CAAwBH,OAAxB,EAAiC,CAACI,WAAW,CAACC,YAAb,CAAjC,CAAb;;AACA,MAAIJ,IAAI,IAAI,IAAZ,EAAkB;AAChB,QAAMK,SAAS,GAAGJ,mBAAUK,SAAV,CAAoBN,IAApB,EAA0BG,WAAW,CAACI,sBAAtC,CAAlB;;AACA,QAAMC,YAAY,GAAGP,mBAAUC,aAAV,CAAwBH,OAAxB,EAAiCI,WAAW,CAACM,yBAA7C,CAArB;;AAEA,QAAIJ,SAAS,IAAI,IAAb,IAAqBG,YAAY,IAAI,IAAzC,EAA+C;AAC7C,aAAO,EAAP;AACD;;AAED,WAAO,CAAC;AAAEE,MAAAA,IAAI,EAAEC,eAAe,CAACC,gBAAxB;AAA0CC,MAAAA,IAAI,EAAER,SAAS,CAACS,OAAV;AAAhD,KAAD,CAAP;AACD;;AACD,SAAO,EAAP;AACD,C","sourcesContent":["/*\n * Copyright (c) 2002-2017 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *\n * This file is part of Neo4j.\n *\n * Neo4j is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as CypherTypes from '../../lang/CypherTypes';\nimport * as CompletionTypes from '../CompletionTypes';\nimport TreeUtils from '../../util/TreeUtils';\n\n// Return procedure output completion if we are inside procedure\nexport default (element) => {\n  const call = TreeUtils.findAnyParent(element, [CypherTypes.CALL_CONTEXT]);\n  if (call != null) {\n    const procedure = TreeUtils.findChild(call, CypherTypes.PROCEDURE_NAME_CONTEXT);\n    const resultOutput = TreeUtils.findAnyParent(element, CypherTypes.PROCEDURE_RESULTS_CONTEXT);\n\n    if (procedure == null || resultOutput == null) {\n      return [];\n    }\n\n    return [{ type: CompletionTypes.PROCEDURE_OUTPUT, name: procedure.getText() }];\n  }\n  return [];\n};\n"],"file":"ruleProcedureOutputsInCallClause.js"}