{"version":3,"sources":["../../../src/completion/rules/ruleNodePattern.js"],"names":["element","parent","getParent","text","getText","constructor","name","CypherTypes","PATTERN_ELEMENT_CONTEXT","type","CompletionTypes","VARIABLE","LABEL","NODE_PATTERN_CONTEXT"],"mappings":";;;;;;;;;AAoBA;;AACA;;;;;;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;eACe,kBAACA,OAAD,EAAa;AAC1B,MAAMC,MAAM,GAAGD,OAAO,CAACE,SAAR,EAAf;AACA,MAAMC,IAAI,GAAGH,OAAO,CAACI,OAAR,EAAb,CAF0B,CAG1B;;AACA,MAAIH,MAAJ,EAAY;AACV,QAAIA,MAAM,CAACI,WAAP,CAAmBC,IAAnB,KAA4BC,WAAW,CAACC,uBAAxC,IAAmEL,IAAI,KAAK,GAAhF,EAAqF;AACnF,aAAO,CACL;AAAEM,QAAAA,IAAI,EAAEC,eAAe,CAACC;AAAxB,OADK,EAEL;AAAEF,QAAAA,IAAI,EAAEC,eAAe,CAACE;AAAxB,OAFK,CAAP;AAID;;AAED,QAAIX,MAAM,CAACI,WAAP,CAAmBC,IAAnB,KAA4BC,WAAW,CAACM,oBAA5C,EAAkE;AAChE;AACA,UAAIV,IAAI,KAAK,GAAb,EAAkB;AAChB,eAAO,CACL;AAAEM,UAAAA,IAAI,EAAEC,eAAe,CAACC;AAAxB,SADK,EAEL;AAAEF,UAAAA,IAAI,EAAEC,eAAe,CAACE;AAAxB,SAFK,CAAP;AAID;;AACD,UAAIT,IAAI,KAAK,GAAb,EAAkB;AAChB,eAAO,CACL;AAAEM,UAAAA,IAAI,EAAEC,eAAe,CAACE;AAAxB,SADK,CAAP;AAGD;AACF;AACF;;AAED,SAAO,EAAP;AACD,C","sourcesContent":["/*\n * Copyright (c) 2002-2017 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *\n * This file is part of Neo4j.\n *\n * Neo4j is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as CypherTypes from '../../lang/CypherTypes';\nimport * as CompletionTypes from '../CompletionTypes';\n\n// If we are in relationship pattern then return variables and types\nexport default (element) => {\n  const parent = element.getParent();\n  const text = element.getText();\n  // Special case. We are at the beginning of first node pattern.\n  if (parent) {\n    if (parent.constructor.name === CypherTypes.PATTERN_ELEMENT_CONTEXT && text === '(') {\n      return [\n        { type: CompletionTypes.VARIABLE },\n        { type: CompletionTypes.LABEL },\n      ];\n    }\n\n    if (parent.constructor.name === CypherTypes.NODE_PATTERN_CONTEXT) {\n      // We are at the begining of node pattern\n      if (text === '(') {\n        return [\n          { type: CompletionTypes.VARIABLE },\n          { type: CompletionTypes.LABEL },\n        ];\n      }\n      if (text === ':') {\n        return [\n          { type: CompletionTypes.LABEL },\n        ];\n      }\n    }\n  }\n\n  return [];\n};\n"],"file":"ruleNodePattern.js"}