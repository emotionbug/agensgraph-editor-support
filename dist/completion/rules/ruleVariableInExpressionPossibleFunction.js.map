{"version":3,"sources":["../../../src/completion/rules/ruleVariableInExpressionPossibleFunction.js"],"names":["element","variable","TreeUtils","findAnyParent","CypherTypes","VARIABLE_CONTEXT","expression","EXPRESSION_CONTEXT","type","CompletionTypes","VARIABLE","FUNCTION_NAME"],"mappings":";;;;;;;;;AAoBA;;AACA;;AACA;;;;;;;;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;eACe,kBAACA,OAAD,EAAa;AAC1B,MAAMC,QAAQ,GAAGC,mBAAUC,aAAV,CAAwBH,OAAxB,EAAiC,CAACI,WAAW,CAACC,gBAAb,CAAjC,CAAjB;;AACA,MAAMC,UAAU,GAAGJ,mBAAUC,aAAV,CAAwBF,QAAxB,EAAkC,CAACG,WAAW,CAACG,kBAAb,CAAlC,CAAnB;;AACA,SAAON,QAAQ,IAAI,IAAZ,IAAoBK,UAAU,IAAI,IAAlC,GACH,CAAC;AAAEE,IAAAA,IAAI,EAAEC,eAAe,CAACC;AAAxB,GAAD,EAAqC;AAAEF,IAAAA,IAAI,EAAEC,eAAe,CAACE;AAAxB,GAArC,CADG,GAEH,EAFJ;AAGD,C","sourcesContent":["/*\n * Copyright (c) 2002-2017 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *\n * This file is part of Neo4j.\n *\n * Neo4j is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as CypherTypes from '../../lang/CypherTypes';\nimport * as CompletionTypes from '../CompletionTypes';\nimport TreeUtils from '../../util/TreeUtils';\n\n// If variable is inside expression context then it might be both variable and function\nexport default (element) => {\n  const variable = TreeUtils.findAnyParent(element, [CypherTypes.VARIABLE_CONTEXT]);\n  const expression = TreeUtils.findAnyParent(variable, [CypherTypes.EXPRESSION_CONTEXT]);\n  return variable != null && expression != null\n    ? [{ type: CompletionTypes.VARIABLE }, { type: CompletionTypes.FUNCTION_NAME }]\n    : [];\n};\n"],"file":"ruleVariableInExpressionPossibleFunction.js"}