{"version":3,"sources":["../../../src/completion/rules/ruleCheckParent.js"],"names":["childToParentTypeMapping","CypherTypes","VARIABLE_CONTEXT","type","CompletionTypes","VARIABLE","PARAMETER_NAME_CONTEXT","PARAMETER","PROPERTY_KEY_NAME_CONTEXT","PROPERTY_KEY","FUNCTION_NAME_CONTEXT","FUNCTION_NAME","PROCEDURE_NAME_CONTEXT","PROCEDURE_NAME","NODE_LABEL_CONTEXT","LABEL","RELATIONSHIP_TYPE_CONTEXT","RELATIONSHIP_TYPE","RELATIONSHIP_TYPE_OPTIONAL_COLON_CONTEXT","CONSOLE_COMMAND_NAME_CONTEXT","CONSOLE_COMMAND_NAME","NODE_LABELS_CONTEXT","RELATIONSHIP_TYPES_CONTEXT","element","parent","TreeUtils","findAnyParent","Object","keys","constructor","name"],"mappings":";;;;;;;;;AAoBA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,wBAAwB,uEAC3BC,WAAW,CAACC,gBADe,EACI,CAC9B;AAAEC,EAAAA,IAAI,EAAEC,eAAe,CAACC;AAAxB,CAD8B,CADJ,0CAI3BJ,WAAW,CAACK,sBAJe,EAIU,CACpC;AAAEH,EAAAA,IAAI,EAAEC,eAAe,CAACG;AAAxB,CADoC,CAJV,0CAO3BN,WAAW,CAACO,yBAPe,EAOa,CACvC;AAAEL,EAAAA,IAAI,EAAEC,eAAe,CAACK;AAAxB,CADuC,CAPb,0CAU3BR,WAAW,CAACS,qBAVe,EAUS,CACnC;AAAEP,EAAAA,IAAI,EAAEC,eAAe,CAACO;AAAxB,CADmC,CAVT,0CAa3BV,WAAW,CAACW,sBAbe,EAaU,CACpC;AAAET,EAAAA,IAAI,EAAEC,eAAe,CAACS;AAAxB,CADoC,CAbV,0CAgB3BZ,WAAW,CAACa,kBAhBe,EAgBM,CAChC;AAAEX,EAAAA,IAAI,EAAEC,eAAe,CAACW;AAAxB,CADgC,CAhBN,0CAmB3Bd,WAAW,CAACe,yBAnBe,EAmBa,CACvC;AAAEb,EAAAA,IAAI,EAAEC,eAAe,CAACa;AAAxB,CADuC,CAnBb,0CAsB3BhB,WAAW,CAACiB,wCAtBe,EAsB4B,CACtD;AAAEf,EAAAA,IAAI,EAAEC,eAAe,CAACa;AAAxB,CADsD,CAtB5B,0CAyB3BhB,WAAW,CAACkB,4BAzBe,EAyBgB,CAC1C;AAAEhB,EAAAA,IAAI,EAAEC,eAAe,CAACgB;AAAxB,CAD0C,CAzBhB,0CA4B3BnB,WAAW,CAACoB,mBA5Be,EA4BO,CACjC;AAAElB,EAAAA,IAAI,EAAEC,eAAe,CAACW;AAAxB,CADiC,CA5BP,0CA+B3Bd,WAAW,CAACqB,0BA/Be,EA+Bc,CACxC;AAAEnB,EAAAA,IAAI,EAAEC,eAAe,CAACa;AAAxB,CADwC,CA/Bd,yBAA9B,C,CAoCA;;eACe,kBAACM,OAAD,EAAa;AAC1B,MAAMC,MAAM,GAAGC,mBAAUC,aAAV,CAAwBH,OAAxB,EAAiCI,MAAM,CAACC,IAAP,CAAY5B,wBAAZ,CAAjC,CAAf;;AACA,SAAOwB,MAAM,IAAI,IAAV,GAAiBxB,wBAAwB,CAACwB,MAAM,CAACK,WAAP,CAAmBC,IAApB,CAAzC,GAAqE,EAA5E;AACD,C","sourcesContent":["/*\n * Copyright (c) 2002-2017 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *\n * This file is part of Neo4j.\n *\n * Neo4j is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as CypherTypes from '../../lang/CypherTypes';\nimport * as CompletionTypes from '../CompletionTypes';\nimport TreeUtils from '../../util/TreeUtils';\n\nconst childToParentTypeMapping = {\n  [CypherTypes.VARIABLE_CONTEXT]: [\n    { type: CompletionTypes.VARIABLE },\n  ],\n  [CypherTypes.PARAMETER_NAME_CONTEXT]: [\n    { type: CompletionTypes.PARAMETER },\n  ],\n  [CypherTypes.PROPERTY_KEY_NAME_CONTEXT]: [\n    { type: CompletionTypes.PROPERTY_KEY },\n  ],\n  [CypherTypes.FUNCTION_NAME_CONTEXT]: [\n    { type: CompletionTypes.FUNCTION_NAME },\n  ],\n  [CypherTypes.PROCEDURE_NAME_CONTEXT]: [\n    { type: CompletionTypes.PROCEDURE_NAME },\n  ],\n  [CypherTypes.NODE_LABEL_CONTEXT]: [\n    { type: CompletionTypes.LABEL },\n  ],\n  [CypherTypes.RELATIONSHIP_TYPE_CONTEXT]: [\n    { type: CompletionTypes.RELATIONSHIP_TYPE },\n  ],\n  [CypherTypes.RELATIONSHIP_TYPE_OPTIONAL_COLON_CONTEXT]: [\n    { type: CompletionTypes.RELATIONSHIP_TYPE },\n  ],\n  [CypherTypes.CONSOLE_COMMAND_NAME_CONTEXT]: [\n    { type: CompletionTypes.CONSOLE_COMMAND_NAME },\n  ],\n  [CypherTypes.NODE_LABELS_CONTEXT]: [\n    { type: CompletionTypes.LABEL },\n  ],\n  [CypherTypes.RELATIONSHIP_TYPES_CONTEXT]: [\n    { type: CompletionTypes.RELATIONSHIP_TYPE },\n  ],\n};\n\n// Check that element is inside specific parent context\nexport default (element) => {\n  const parent = TreeUtils.findAnyParent(element, Object.keys(childToParentTypeMapping));\n  return parent != null ? childToParentTypeMapping[parent.constructor.name] : [];\n};\n"],"file":"ruleCheckParent.js"}