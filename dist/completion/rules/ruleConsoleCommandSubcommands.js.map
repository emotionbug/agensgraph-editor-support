{"version":3,"sources":["../../../src/completion/rules/ruleConsoleCommandSubcommands.js"],"names":["element","consoleCommand","TreeUtils","findParent","parentCtx","CypherTypes","CONSOLE_COMMAND_CONTEXT","isAtTheEndOfConsoleCommand","parent","child1","findChild","children","child2","currentElement","CONSOLE_COMMAND_PARAMETER_CONTEXT","path","currentElementInParameter","i","length","child","constructor","name","CONSOLE_COMMAND_NAME_CONTEXT","push","getText","CONSOLE_COMMAND_PARAMETERS_CONTEXT","j","parameterChild","filterLastElement","type","CompletionTypes","CONSOLE_COMMAND_SUBCOMMAND"],"mappings":";;;;;;;;;AAoBA;;AACA;;AACA;;;;;;;;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;eACe,kBAACA,OAAD,EAAa;AAC1B,MAAIC,cAAc,GAAGC,mBAAUC,UAAV,CAAqBH,OAAO,CAACI,SAA7B,EAAwCC,WAAW,CAACC,uBAApD,CAArB;;AACA,MAAIC,0BAA0B,GAAG,KAAjC;;AACA,MAAI,CAACN,cAAL,EAAqB;AACnB;AACA;AACA;AACA;AACA,QAAMO,MAAM,GAAGR,OAAO,CAACI,SAAvB;;AACA,QAAMK,MAAM,GAAGP,mBAAUQ,SAAV,CAAoBF,MAAM,CAACG,QAAP,CAAgB,CAAhB,CAApB,EAAwCN,WAAW,CAACC,uBAApD,CAAf;;AACA,QAAMM,MAAM,GAAGJ,MAAM,CAACG,QAAP,CAAgB,CAAhB,CAAf;;AACA,QAAIF,MAAM,IAAIG,MAAV,IAAoBA,MAAM,KAAKZ,OAAnC,EAA4C;AAC1CC,MAAAA,cAAc,GAAGQ,MAAjB;AACAF,MAAAA,0BAA0B,GAAG,IAA7B;AACD,KAHD,MAGO;AACL,aAAO,EAAP;AACD;AACF,GAjByB,CAmB1B;;;AACA,MAAMM,cAAc,GAAGX,mBACpBC,UADoB,CACTH,OADS,EACAK,WAAW,CAACS,iCADZ,KACkDd,OADzE;AAGA,MAAMe,IAAI,GAAG,EAAb;AACA,MAAIC,yBAAyB,GAAG,KAAhC,CAxB0B,CA0B1B;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,cAAc,CAACU,QAAf,CAAwBO,MAA5C,EAAoDD,CAAC,IAAI,CAAzD,EAA4D;AAC1D,QAAME,KAAK,GAAGlB,cAAc,CAACU,QAAf,CAAwBM,CAAxB,CAAd;;AACA,QAAIE,KAAK,CAACC,WAAN,CAAkBC,IAAlB,KAA2BhB,WAAW,CAACiB,4BAA3C,EAAyE;AACvEP,MAAAA,IAAI,CAACQ,IAAL,CAAUJ,KAAK,CAACK,OAAN,EAAV;AACD;;AACD,QAAIL,KAAK,CAACC,WAAN,CAAkBC,IAAlB,KAA2BhB,WAAW,CAACoB,kCAA3C,EAA+E;AAC7E,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAAK,CAACR,QAAN,CAAeO,MAAnC,EAA2CQ,CAAC,IAAI,CAAhD,EAAmD;AACjD,YAAMC,cAAc,GAAGR,KAAK,CAACR,QAAN,CAAee,CAAf,CAAvB;;AACA,YAAIC,cAAc,CAACP,WAAf,CAA2BC,IAA3B,KAAoChB,WAAW,CAACS,iCAApD,EAAuF;AACrFC,UAAAA,IAAI,CAACQ,IAAL,CAAUI,cAAc,CAACH,OAAf,EAAV;AACAR,UAAAA,yBAAyB,GAAG,IAA5B;AACD,SAHD,MAGO;AACLA,UAAAA,yBAAyB,GAAG,KAA5B;AACD;;AACD,YAAIW,cAAc,KAAKd,cAAvB,EAAuC;AACrC;AACD;AACF;AACF;AACF,GA9CyB,CAgD1B;;;AACA,MAAIe,iBAAJ;;AACA,MAAIrB,0BAAJ,EAAgC;AAC9BqB,IAAAA,iBAAiB,GAAG,KAApB;AACD,GAFD,MAEO;AACL;AACAA,IAAAA,iBAAiB,GAAGZ,yBAApB;AACD;;AAED,SAAO,CACL;AACEa,IAAAA,IAAI,EAAEC,eAAe,CAACC,0BADxB;AAEEhB,IAAAA,IAAI,EAAJA,IAFF;AAGEa,IAAAA,iBAAiB,EAAjBA;AAHF,GADK,CAAP;AAOD,C","sourcesContent":["/*\n * Copyright (c) 2002-2017 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *\n * This file is part of Neo4j.\n *\n * Neo4j is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as CypherTypes from '../../lang/CypherTypes';\nimport * as CompletionTypes from '../CompletionTypes';\nimport TreeUtils from '../../util/TreeUtils';\n\n// If we are in console command, and not in console command name, return path\nexport default (element) => {\n  let consoleCommand = TreeUtils.findParent(element.parentCtx, CypherTypes.CONSOLE_COMMAND_CONTEXT);\n  let isAtTheEndOfConsoleCommand = false;\n  if (!consoleCommand) {\n    // We are not in console command. But maybe we are on a space at the end of console command?\n    // If first child of parent contains console command\n    // and second child is our current element\n    // then we are at the space at the end of console command\n    const parent = element.parentCtx;\n    const child1 = TreeUtils.findChild(parent.children[0], CypherTypes.CONSOLE_COMMAND_CONTEXT);\n    const child2 = parent.children[1];\n    if (child1 && child2 && child2 === element) {\n      consoleCommand = child1;\n      isAtTheEndOfConsoleCommand = true;\n    } else {\n      return [];\n    }\n  }\n\n  // Find current parameter or space\n  const currentElement = TreeUtils\n    .findParent(element, CypherTypes.CONSOLE_COMMAND_PARAMETER_CONTEXT) || element;\n\n  const path = [];\n  let currentElementInParameter = false;\n\n  // Iterate over parameters, and stop when we found current one.\n  for (let i = 0; i < consoleCommand.children.length; i += 1) {\n    const child = consoleCommand.children[i];\n    if (child.constructor.name === CypherTypes.CONSOLE_COMMAND_NAME_CONTEXT) {\n      path.push(child.getText());\n    }\n    if (child.constructor.name === CypherTypes.CONSOLE_COMMAND_PARAMETERS_CONTEXT) {\n      for (let j = 0; j < child.children.length; j += 1) {\n        const parameterChild = child.children[j];\n        if (parameterChild.constructor.name === CypherTypes.CONSOLE_COMMAND_PARAMETER_CONTEXT) {\n          path.push(parameterChild.getText());\n          currentElementInParameter = true;\n        } else {\n          currentElementInParameter = false;\n        }\n        if (parameterChild === currentElement) {\n          break;\n        }\n      }\n    }\n  }\n\n  // If we are at the end of console command, nothing to filter.\n  let filterLastElement;\n  if (isAtTheEndOfConsoleCommand) {\n    filterLastElement = false;\n  } else {\n    // If we are in parameter, filter, otherwise not\n    filterLastElement = currentElementInParameter;\n  }\n\n  return [\n    {\n      type: CompletionTypes.CONSOLE_COMMAND_SUBCOMMAND,\n      path,\n      filterLastElement,\n    },\n  ];\n};\n"],"file":"ruleConsoleCommandSubcommands.js"}