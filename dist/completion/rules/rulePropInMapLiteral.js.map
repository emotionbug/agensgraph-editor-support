{"version":3,"sources":["../../../src/completion/rules/rulePropInMapLiteral.js"],"names":["element","mapLiteralContext","TreeUtils","findParent","CypherTypes","MAP_LITERAL_CONTEXT","propertiesContext","PROPERTIES_CONTEXT","text","getText","type","CompletionTypes","PROPERTY_KEY","test","PARAMETER"],"mappings":";;;;;;;;;AAoBA;;AACA;;AACA;;;;;;;;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;eAMe,kBAACA,OAAD,EAAa;AAC1B,MAAMC,iBAAiB,GAAGC,mBAAUC,UAAV,CAAqBH,OAArB,EAA8BI,WAAW,CAACC,mBAA1C,CAA1B;;AACA,MAAMC,iBAAiB,GAAGJ,mBAAUC,UAAV,CAAqBH,OAArB,EAA8BI,WAAW,CAACG,kBAA1C,CAA1B;;AAEA,MAAIN,iBAAJ,EAAuB;AACrB,QAAMO,IAAI,GAAGR,OAAO,CAACS,OAAR,EAAb;;AACA,QAAID,IAAI,KAAK,GAAb,EAAkB;AAChB,aAAO,EAAP;AACD;;AACD,WAAO,CACL;AAAEE,MAAAA,IAAI,EAAEC,eAAe,CAACC;AAAxB,KADK,CAAP;AAGD;;AAED,MAAIN,iBAAJ,EAAuB;AACrB,QAAME,KAAI,GAAGR,OAAO,CAACS,OAAR,EAAb;;AACA,QAAID,KAAI,KAAK,GAAb,EAAkB;AAChB,aAAO,EAAP;AACD;;AACD,QAAI,MAAMK,IAAN,CAAWL,KAAX,CAAJ,EAAsB;AACpB,aAAO,EAAP;AACD;;AACD,WAAO,CACL;AAAEE,MAAAA,IAAI,EAAEC,eAAe,CAACC;AAAxB,KADK,EAEL;AAAEF,MAAAA,IAAI,EAAEC,eAAe,CAACG;AAAxB,KAFK,CAAP;AAID;;AAED,SAAO,EAAP;AACD,C","sourcesContent":["/*\n * Copyright (c) 2002-2017 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *\n * This file is part of Neo4j.\n *\n * Neo4j is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as CypherTypes from '../../lang/CypherTypes';\nimport * as CompletionTypes from '../CompletionTypes';\nimport TreeUtils from '../../util/TreeUtils';\n\nexport default (element) => {\n  const mapLiteralContext = TreeUtils.findParent(element, CypherTypes.MAP_LITERAL_CONTEXT);\n  const propertiesContext = TreeUtils.findParent(element, CypherTypes.PROPERTIES_CONTEXT);\n\n  if (mapLiteralContext) {\n    const text = element.getText();\n    if (text === '}') {\n      return [];\n    }\n    return [\n      { type: CompletionTypes.PROPERTY_KEY },\n    ];\n  }\n\n  if (propertiesContext) {\n    const text = element.getText();\n    if (text === '}') {\n      return [];\n    }\n    if (/\\s+/.test(text)) {\n      return [];\n    }\n    return [\n      { type: CompletionTypes.PROPERTY_KEY },\n      { type: CompletionTypes.PARAMETER },\n    ];\n  }\n\n  return [];\n};\n"],"file":"rulePropInMapLiteral.js"}