{"version":3,"sources":["../../src/references/ReferencesListener.js"],"names":["Index","namesByQuery","push","referencesByQueryAndName","ctx","addName","queryIndex","length","text","getText","names","referencesByName","index","parent","parentCtx","constructor","name","CypherTypes","ATOM_CONTEXT","add","ReferencesListener","SYMBOLIC_CONTEXTS","reduce","acc","t","raw","statements","queriesAndCommands","Object","keys","indexes","forEach","k","addQuery","inConsoleCommand","queries","VARIABLE_CONTEXT","addVariable","LABEL_NAME_CONTEXT","RELATIONSHIP_TYPE_NAME_CONTEXT","PROPERTY_KEY_NAME_CONTEXT","PARAMETER_NAME_CONTEXT","CypherListener"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2002-2017 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *\n * This file is part of Neo4j.\n *\n * Neo4j is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport CypherListener from '../_generated/CypherListener';\nimport * as CypherTypes from '../lang/CypherTypes';\n\nclass Index {\n  names = {};\n\n  namesByQuery = [];\n\n  referencesByName = {};\n\n  referencesByQueryAndName = [];\n\n  addQuery() {\n    this.namesByQuery.push([]);\n    this.referencesByQueryAndName.push({});\n  }\n\n  add(ctx, addName = true) {\n    const queryIndex = this.namesByQuery.length - 1;\n    const text = ctx.getText();\n    if (addName) {\n      this.names[text] = true;\n      this.namesByQuery[queryIndex][text] = true;\n    }\n    this.referencesByName[text] = [...(this.referencesByName[text] || []), ctx];\n    const index = this.referencesByQueryAndName[queryIndex];\n    index[text] = [...(index[text] || []), ctx];\n  }\n\n  /**\n   * Variables have specific rules, because they participate in autocompletion.\n   * We should not add to the names list variables that are in expression.\n   */\n  addVariable(ctx) {\n    let addName = true;\n\n    // If variable is inside atom, then variable is inside expression.\n    // Therefore, variables is node defined here.\n    const parent = ctx.parentCtx;\n    if (parent && parent.constructor.name === CypherTypes.ATOM_CONTEXT) {\n      addName = false;\n    }\n    this.add(ctx, addName);\n  }\n}\n\nexport default class ReferencesListener extends CypherListener {\n  queries = [];\n\n  queriesAndCommands = [];\n\n  statements = [];\n\n  raw = [];\n\n  indexes = CypherTypes.SYMBOLIC_CONTEXTS.reduce(\n    (acc, t) => ({\n      ...acc,\n      [t]: new Index(t),\n    }),\n    {},\n  );\n\n  inConsoleCommand = false;\n\n  enterRaw(ctx) {\n    this.raw.push(ctx);\n  }\n\n  exitRaw(ctx) {\n    if (this.raw.length === 0) {\n      this.raw.push(ctx);\n    }\n  }\n\n  enterCypherPart(ctx) {\n    this.statements.push(ctx);\n  }\n\n  exitCypher(ctx) {\n    if (this.statements.length === 0) {\n      this.statements.push(ctx);\n    }\n  }\n\n  enterCypherConsoleCommand(ctx) {\n    this.queriesAndCommands.push(ctx);\n    Object.keys(this.indexes).forEach((k) => this.indexes[k].addQuery());\n    this.inConsoleCommand = true;\n  }\n\n  exitCypherConsoleCommand() {\n    this.inConsoleCommand = false;\n  }\n\n  enterCypherQuery(ctx) {\n    this.queries.push(ctx);\n    this.queriesAndCommands.push(ctx);\n    Object.keys(this.indexes).forEach((k) => this.indexes[k].addQuery());\n  }\n\n  exitVariable(ctx) {\n    if (this.inConsoleCommand) {\n      return;\n    }\n    this.indexes[CypherTypes.VARIABLE_CONTEXT].addVariable(ctx);\n  }\n\n  exitLabelName(ctx) {\n    if (this.inConsoleCommand) {\n      return;\n    }\n    this.indexes[CypherTypes.LABEL_NAME_CONTEXT].add(ctx);\n  }\n\n  exitRelTypeName(ctx) {\n    if (this.inConsoleCommand) {\n      return;\n    }\n    this.indexes[CypherTypes.RELATIONSHIP_TYPE_NAME_CONTEXT].add(ctx);\n  }\n\n  exitPropertyKeyName(ctx) {\n    if (this.inConsoleCommand) {\n      return;\n    }\n    this.indexes[CypherTypes.PROPERTY_KEY_NAME_CONTEXT].add(ctx);\n  }\n\n  exitParameterName(ctx) {\n    if (this.inConsoleCommand) {\n      return;\n    }\n    this.indexes[CypherTypes.PARAMETER_NAME_CONTEXT].add(ctx);\n  }\n}\n"],"file":"ReferencesListener.js"}