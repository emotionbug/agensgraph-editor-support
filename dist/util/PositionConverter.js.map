{"version":3,"sources":["../../src/util/PositionConverter.js"],"names":["PositionConverter","input","i","length","newLines","push","line","column","abs"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAEqBA,iB;AAGnB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sCAFR,EAEQ;;AACjB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,IAAI,CAAvC,EAA0C;AACxC,UAAID,KAAK,CAACC,CAAD,CAAL,KAAa,IAAjB,EAAuB;AACrB,aAAKE,QAAL,CAAcC,IAAd,CAAmBH,CAAnB;AACD;AACF;AACF;;;;WAED,oBAAWI,IAAX,EAAiBC,MAAjB,EAAyB;AACvB,aAAO,CAAC,KAAKH,QAAL,CAAcE,IAAI,GAAG,CAArB,KAA2B,CAAC,CAA7B,IAAkCC,MAAlC,GAA2C,CAAlD;AACD;;;WAED,oBAAWC,GAAX,EAAgB;AACd,WAAK,IAAIN,CAAC,GAAG,KAAKE,QAAL,CAAcD,MAAd,GAAuB,CAApC,EAAuCD,CAAC,IAAI,CAA5C,EAA+CA,CAAC,IAAI,CAApD,EAAuD;AACrD,YAAMK,MAAM,GAAGC,GAAG,GAAG,KAAKJ,QAAL,CAAcF,CAAd,CAArB;;AACA,YAAIK,MAAM,IAAI,CAAd,EAAiB;AACf,iBAAO;AAAED,YAAAA,IAAI,EAAEJ,CAAC,GAAG,CAAZ;AAAeK,YAAAA,MAAM,EAAEA,MAAM,GAAG;AAAhC,WAAP;AACD;AACF;;AAED,aAAO;AAAED,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,MAAM,EAAEC;AAAnB,OAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2002-2017 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *\n * This file is part of Neo4j.\n *\n * Neo4j is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default class PositionConverter {\n  newLines = [];\n\n  constructor(input) {\n    for (let i = 0; i < input.length; i += 1) {\n      if (input[i] === '\\n') {\n        this.newLines.push(i);\n      }\n    }\n  }\n\n  toAbsolute(line, column) {\n    return (this.newLines[line - 2] || -1) + column + 1;\n  }\n\n  toRelative(abs) {\n    for (let i = this.newLines.length - 1; i >= 0; i -= 1) {\n      const column = abs - this.newLines[i];\n      if (column >= 1) {\n        return { line: i + 2, column: column - 1 };\n      }\n    }\n\n    return { line: 1, column: abs };\n  }\n}\n"],"file":"PositionConverter.js"}