{"version":3,"sources":["../../src/util/TreeUtils.js"],"names":["TreeUtils","pt","type","el","constructor","name","parentCtx","types","indexOf","element","children","i","length","e","result","findChild","start","stop","symbol","isErrorNode","childHasErrorNode","hasErrorNode"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2002-2017 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *\n * This file is part of Neo4j.\n *\n * Neo4j is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default class TreeUtils {\n  static findParent(pt, type) {\n    let el = pt;\n    while (true) { // eslint-disable-line no-constant-condition\n      if (el == null) {\n        return null;\n      }\n      if (el.constructor.name === type) {\n        return el;\n      }\n      el = el.parentCtx;\n    }\n  }\n\n  static findAnyParent(pt, types = []) {\n    let el = pt;\n    while (true) { // eslint-disable-line no-constant-condition\n      if (el == null) {\n        return null;\n      }\n      if (types.indexOf(el.constructor.name) > -1) {\n        return el;\n      }\n      el = el.parentCtx;\n    }\n  }\n\n  static findChild(element, type) {\n    if (element == null) {\n      return null;\n    }\n\n    if (element.constructor.name === type) {\n      return element;\n    }\n\n    if (element.children != null) {\n      for (let i = 0; i < element.children.length; i += 1) {\n        const e = element.children[i];\n        const result = TreeUtils.findChild(e, type);\n        if (result != null) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  static getPosition(el) {\n    if (el != null) {\n      const { start, stop, symbol } = el;\n      if (symbol != null) {\n        return {\n          start: symbol.start,\n          stop: symbol.stop,\n        };\n      } else if (start != null && stop != null) {\n        return {\n          start: start.start,\n          stop: stop.stop,\n        };\n      }\n    }\n\n    return null;\n  }\n\n  static hasErrorNode(element) {\n    if (element == null) {\n      return false;\n    }\n\n    if (element.isErrorNode && element.isErrorNode()) {\n      return true;\n    }\n\n    if (element.children != null) {\n      for (let i = 0; i < element.children.length; i += 1) {\n        const e = element.children[i];\n        const childHasErrorNode = TreeUtils.hasErrorNode(e);\n        if (childHasErrorNode) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n"],"file":"TreeUtils.js"}