lexer grammar AgensGraphLexer;

@members {
/* This field stores the tags which are used to detect the end of a dollar-quoted string literal.
*/
	  this._tags = [];
	  this.isLetter = (checkString) => {
        try {
            let regExSpecial = /[^\$_]/;
            return regExSpecial.test(checkString);
        } catch (error) {
            return false;
        }
	  };
}

    /*
     * Most keyword tokens are autogenerated using the list in the Keyword class,
     * which comes directly from PostgreSQL source.
     * Each word-token must also participate in a parser rule corresponding to
     * its keyword's category. These are autogenerated using Keyword class.
     *
     * Manually added word-tokens must also be manually added to the
     * tokens_nonkeyword parser rule.
     */

    /*
    ==================================================
    UNRESERVED_KEYWORD
    ==================================================
    */

    ALLSHORTESTPATHS: [aA] [lL] [lL] [sS] [hH] [oO] [rR] [tT] [eE] [sS] [tT] [pP] [aA] [tT] [hH] [sS];
    ASCENDING: [aA] [sS] [cC] [eE] [nN] [dD] [iI] [nN] [gG];
    CONTAINS: [cC] [oO] [nN] [tT] [aA] [iI] [nN] [sS];
    COUNT: [cC] [oO] [uU] [nN] [tT];
    DESCENDING: [dD] [eE] [sS] [cC] [eE] [nN] [dD] [iI] [nN] [gG];
    ENDS: [eE] [nN] [dD] [sS];
    FIELDTERMINATOR: [fF] [iI] [eE] [lL] [dD] [tT] [eE] [rR] [mM] [iI] [nN] [aA] [tT] [oO] [rR];
    HEADERS: [hH] [eE] [aA] [dD] [eE] [rR] [sS];
    OPTIONAL: [oO] [pP] [tT] [iI] [oO] [nN] [aA] [lL];

    PG_ABORT: [aA] [bB] [oO] [rR] [tT];    // first identifier rule, sync with CustomSQLAntlrErrorStrategy & AntlrUtils
    PG_ABSOLUTE: [aA] [bB] [sS] [oO] [lL] [uU] [tT] [eE];
    PG_ACCESS: [aA] [cC] [cC] [eE] [sS] [sS];
    PG_ACTION: [aA] [cC] [tT] [iI] [oO] [nN];
    PG_ADD: [aA] [dD] [dD];
    PG_ADMIN: [aA] [dD] [mM] [iI] [nN];
    PG_AFTER: [aA] [fF] [tT] [eE] [rR];
    PG_AGGREGATE: [aA] [gG] [gG] [rR] [eE] [gG] [aA] [tT] [eE];
    PG_ALSO: [aA] [lL] [sS] [oO];
    PG_ALTER: [aA] [lL] [tT] [eE] [rR];
    PG_ALWAYS: [aA] [lL] [wW] [aA] [yY] [sS];
    PG_ASSERTION: [aA] [sS] [sS] [eE] [rR] [tT] [iI] [oO] [nN];
    PG_ASSIGNMENT: [aA] [sS] [sS] [iI] [gG] [nN] [mM] [eE] [nN] [tT];
    PG_AT: [aA] [tT];
    PG_ATTACH: [aA] [tT] [tT] [aA] [cC] [hH];
    PG_ATTRIBUTE: [aA] [tT] [tT] [rR] [iI] [bB] [uU] [tT] [eE];

    PG_BACKWARD: [bB] [aA] [cC] [kK] [wW] [aA] [rR] [dD];
    PG_BEFORE: [bB] [eE] [fF] [oO] [rR] [eE];
    PG_BEGIN: [bB] [eE] [gG] [iI] [nN];
    PG_BY: [bB] [yY];

    PG_CACHE: [cC] [aA] [cC] [hH] [eE];
    PG_CALL: [cC] [aA] [lL] [lL];
    PG_CALLED: [cC] [aA] [lL] [lL] [eE] [dD];
    PG_CASCADE: [cC] [aA] [sS] [cC] [aA] [dD] [eE];
    PG_CASCADED: [cC] [aA] [sS] [cC] [aA] [dD] [eE] [dD];
    PG_CATALOG: [cC] [aA] [tT] [aA] [lL] [oO] [gG];
    PG_CHAIN: [cC] [hH] [aA] [iI] [nN];
    PG_CHARACTERISTICS: [cC] [hH] [aA] [rR] [aA] [cC] [tT] [eE] [rR] [iI] [sS] [tT] [iI] [cC] [sS];
    PG_CHECKPOINT: [cC] [hH] [eE] [cC] [kK] [pP] [oO] [iI] [nN] [tT];
    PG_CLASS: [cC] [lL] [aA] [sS] [sS];
    PG_CLOSE: [cC] [lL] [oO] [sS] [eE];
    PG_CLUSTER: [cC] [lL] [uU] [sS] [tT] [eE] [rR];
    PG_COLUMNS: [cC] [oO] [lL] [uU] [mM] [nN] [sS];
    PG_COMMENT: [cC] [oO] [mM] [mM] [eE] [nN] [tT];
    PG_COMMENTS: [cC] [oO] [mM] [mM] [eE] [nN] [tT] [sS];
    PG_COMMIT: [cC] [oO] [mM] [mM] [iI] [tT];
    PG_COMMITTED: [cC] [oO] [mM] [mM] [iI] [tT] [tT] [eE] [dD];
    PG_CONFIGURATION: [cC] [oO] [nN] [fF] [iI] [gG] [uU] [rR] [aA] [tT] [iI] [oO] [nN];
    PG_CONFLICT: [cC] [oO] [nN] [fF] [lL] [iI] [cC] [tT];
    PG_CONNECTION: [cC] [oO] [nN] [nN] [eE] [cC] [tT] [iI] [oO] [nN];
    PG_CONSTRAINTS: [cC] [oO] [nN] [sS] [tT] [rR] [aA] [iI] [nN] [tT] [sS];
    PG_CONTENT: [cC] [oO] [nN] [tT] [eE] [nN] [tT];
    PG_CONTINUE: [cC] [oO] [nN] [tT] [iI] [nN] [uU] [eE];
    PG_CONVERSION: [cC] [oO] [nN] [vV] [eE] [rR] [sS] [iI] [oO] [nN];
    PG_COPY: [cC] [oO] [pP] [yY];
    PG_COST: [cC] [oO] [sS] [tT];
    PG_CSV: [cC] [sS] [vV];
    PG_CUBE: [cC] [uU] [bB] [eE];
    PG_CURRENT: [cC] [uU] [rR] [rR] [eE] [nN] [tT];
    PG_CURSOR: [cC] [uU] [rR] [sS] [oO] [rR];
    PG_CYCLE: [cC] [yY] [cC] [lL] [eE];

    PG_DATA: [dD] [aA] [tT] [aA];
    PG_DATABASE: [dD] [aA] [tT] [aA] [bB] [aA] [sS] [eE];
    PG_DAY: [dD] [aA] [yY];
    PG_DEALLOCATE: [dD] [eE] [aA] [lL] [lL] [oO] [cC] [aA] [tT] [eE];
    PG_DECLARE: [dD] [eE] [cC] [lL] [aA] [rR] [eE];
    PG_DEFAULTS: [dD] [eE] [fF] [aA] [uU] [lL] [tT] [sS];
    PG_DEFERRED: [dD] [eE] [fF] [eE] [rR] [rR] [eE] [dD];
    PG_DEFINER: [dD] [eE] [fF] [iI] [nN] [eE] [rR];
    PG_DELETE: [dD] [eE] [lL] [eE] [tT] [eE];
    PG_DELIMITER: [dD] [eE] [lL] [iI] [mM] [iI] [tT] [eE] [rR];
    PG_DELIMITERS: [dD] [eE] [lL] [iI] [mM] [iI] [tT] [eE] [rR] [sS];
    PG_DEPENDS: [dD] [eE] [pP] [eE] [nN] [dD] [sS];
    PG_DETACH: [dD] [eE] [tT] [aA] [cC] [hH];
    PG_DICTIONARY: [dD] [iI] [cC] [tT] [iI] [oO] [nN] [aA] [rR] [yY];
    PG_DISABLE: [dD] [iI] [sS] [aA] [bB] [lL] [eE];
    PG_DISCARD: [dD] [iI] [sS] [cC] [aA] [rR] [dD];
    PG_DOCUMENT: [dD] [oO] [cC] [uU] [mM] [eE] [nN] [tT];
    PG_DOMAIN: [dD] [oO] [mM] [aA] [iI] [nN];
    PG_DOUBLE: [dD] [oO] [uU] [bB] [lL] [eE];
    PG_DROP: [dD] [rR] [oO] [pP];

    PG_EACH: [eE] [aA] [cC] [hH];
    PG_ENABLE: [eE] [nN] [aA] [bB] [lL] [eE];
    PG_ENCODING: [eE] [nN] [cC] [oO] [dD] [iI] [nN] [gG];
    PG_ENCRYPTED: [eE] [nN] [cC] [rR] [yY] [pP] [tT] [eE] [dD];
    PG_ENUM: [eE] [nN] [uU] [mM];
    PG_ESCAPE: [eE] [sS] [cC] [aA] [pP] [eE];
    PG_EVENT: [eE] [vV] [eE] [nN] [tT];
    PG_EXCLUDE: [eE] [xX] [cC] [lL] [uU] [dD] [eE];
    PG_EXCLUDING: [eE] [xX] [cC] [lL] [uU] [dD] [iI] [nN] [gG];
    PG_EXCLUSIVE: [eE] [xX] [cC] [lL] [uU] [sS] [iI] [vV] [eE];
    PG_EXECUTE: [eE] [xX] [eE] [cC] [uU] [tT] [eE];
    PG_EXPLAIN: [eE] [xX] [pP] [lL] [aA] [iI] [nN];
    PG_EXPRESSION: [eE] [xX] [pP] [rR] [eE] [sS] [sS] [iI] [oO] [nN];
    PG_EXTENSION: [eE] [xX] [tT] [eE] [nN] [sS] [iI] [oO] [nN];
    PG_EXTERNAL: [eE] [xX] [tT] [eE] [rR] [nN] [aA] [lL];

    PG_FAMILY: [fF] [aA] [mM] [iI] [lL] [yY];
    PG_FILTER: [fF] [iI] [lL] [tT] [eE] [rR];
    PG_FIRST: [fF] [iI] [rR] [sS] [tT];
    PG_FOLLOWING: [fF] [oO] [lL] [lL] [oO] [wW] [iI] [nN] [gG];
    PG_FORCE: [fF] [oO] [rR] [cC] [eE];
    PG_FORWARD: [fF] [oO] [rR] [wW] [aA] [rR] [dD];
    PG_FUNCTION: [fF] [uU] [nN] [cC] [tT] [iI] [oO] [nN];
    PG_FUNCTIONS: [fF] [uU] [nN] [cC] [tT] [iI] [oO] [nN] [sS];

    PG_GENERATED: [gG] [eE] [nN] [eE] [rR] [aA] [tT] [eE] [dD];
    PG_GLOBAL: [gG] [lL] [oO] [bB] [aA] [lL];
    PG_GRANTED: [gG] [rR] [aA] [nN] [tT] [eE] [dD];
    PG_GROUPS: [gG] [rR] [oO] [uU] [pP] [sS];

    PG_HANDLER: [hH] [aA] [nN] [dD] [lL] [eE] [rR];
    PG_HEADER: [hH] [eE] [aA] [dD] [eE] [rR];
    PG_HOLD: [hH] [oO] [lL] [dD];
    PG_HOUR: [hH] [oO] [uU] [rR];

    PG_IDENTITY: [iI] [dD] [eE] [nN] [tT] [iI] [tT] [yY];
    PG_IF: [iI] [fF];
    PG_IMMEDIATE: [iI] [mM] [mM] [eE] [dD] [iI] [aA] [tT] [eE];
    PG_IMMUTABLE: [iI] [mM] [mM] [uU] [tT] [aA] [bB] [lL] [eE];
    PG_IMPLICIT: [iI] [mM] [pP] [lL] [iI] [cC] [iI] [tT];
    PG_IMPORT: [iI] [mM] [pP] [oO] [rR] [tT];
    PG_INCLUDE: [iI] [nN] [cC] [lL] [uU] [dD] [eE];
    PG_INCLUDING: [iI] [nN] [cC] [lL] [uU] [dD] [iI] [nN] [gG];
    PG_INCREMENT: [iI] [nN] [cC] [rR] [eE] [mM] [eE] [nN] [tT];
    PG_INDEX: [iI] [nN] [dD] [eE] [xX];
    PG_INDEXES: [iI] [nN] [dD] [eE] [xX] [eE] [sS];
    PG_INHERIT: [iI] [nN] [hH] [eE] [rR] [iI] [tT];
    PG_INHERITS: [iI] [nN] [hH] [eE] [rR] [iI] [tT] [sS];
    PG_INLINE: [iI] [nN] [lL] [iI] [nN] [eE];
    PG_INPUT: [iI] [nN] [pP] [uU] [tT];
    PG_INSENSITIVE: [iI] [nN] [sS] [eE] [nN] [sS] [iI] [tT] [iI] [vV] [eE];
    PG_INSERT: [iI] [nN] [sS] [eE] [rR] [tT];
    PG_INSTEAD: [iI] [nN] [sS] [tT] [eE] [aA] [dD];
    PG_INVOKER: [iI] [nN] [vV] [oO] [kK] [eE] [rR];
    PG_ISOLATION: [iI] [sS] [oO] [lL] [aA] [tT] [iI] [oO] [nN];

    PG_KEY: [kK] [eE] [yY];

    PG_LABEL: [lL] [aA] [bB] [eE] [lL];
    PG_LANGUAGE: [lL] [aA] [nN] [gG] [uU] [aA] [gG] [eE];
    PG_LARGE: [lL] [aA] [rR] [gG] [eE];
    PG_LAST: [lL] [aA] [sS] [tT];
    PG_LEAKPROOF: [lL] [eE] [aA] [kK] [pP] [rR] [oO] [oO] [fF];
    PG_LEVEL: [lL] [eE] [vV] [eE] [lL];
    PG_LISTEN: [lL] [iI] [sS] [tT] [eE] [nN];
    PG_LOAD: [lL] [oO] [aA] [dD];
    PG_LOCAL: [lL] [oO] [cC] [aA] [lL];
    PG_LOCATION: [lL] [oO] [cC] [aA] [tT] [iI] [oO] [nN];
    PG_LOCK: [lL] [oO] [cC] [kK];
    PG_LOCKED: [lL] [oO] [cC] [kK] [eE] [dD];
    PG_LOGGED: [lL] [oO] [gG] [gG] [eE] [dD];

    PG_MAPPING: [mM] [aA] [pP] [pP] [iI] [nN] [gG];
    PG_MATCH: [mM] [aA] [tT] [cC] [hH];
    PG_MATERIALIZED: [mM] [aA] [tT] [eE] [rR] [iI] [aA] [lL] [iI] [zZ] [eE] [dD];
    PG_MAXVALUE: [mM] [aA] [xX] [vV] [aA] [lL] [uU] [eE];
    PG_METHOD: [mM] [eE] [tT] [hH] [oO] [dD];
    PG_MINUTE: [mM] [iI] [nN] [uU] [tT] [eE];
    PG_MINVALUE: [mM] [iI] [nN] [vV] [aA] [lL] [uU] [eE];
    PG_MODE: [mM] [oO] [dD] [eE];
    PG_MONTH: [mM] [oO] [nN] [tT] [hH];
    PG_MOVE: [mM] [oO] [vV] [eE];

    PG_NAME: [nN] [aA] [mM] [eE];
    PG_NAMES: [nN] [aA] [mM] [eE] [sS];
    PG_NEW: [nN] [eE] [wW];
    PG_NEXT: [nN] [eE] [xX] [tT];
    PG_NFC: [nN] [fF] [cC];
    PG_NFD: [nN] [fF] [dD];
    PG_NFKC: [nN] [fF] [kK] [cC];
    PG_NFKD: [nN] [fF] [kK] [dD];
    PG_NO: [nN] [oO];
    PG_NORMALIZED: [nN] [oO] [rR] [mM] [aA] [lL] [iI] [zZ] [eE] [dD];
    PG_NOTHING: [nN] [oO] [tT] [hH] [iI] [nN] [gG];
    PG_NOTIFY: [nN] [oO] [tT] [iI] [fF] [yY];
    PG_NOWAIT: [nN] [oO] [wW] [aA] [iI] [tT];
    PG_NULLS: [nN] [uU] [lL] [lL] [sS];

    PG_OBJECT: [oO] [bB] [jJ] [eE] [cC] [tT];
    PG_OF: [oO] [fF];
    PG_OFF: [oO] [fF] [fF];
    PG_OIDS: [oO] [iI] [dD] [sS];
    PG_OLD: [oO] [lL] [dD];
    PG_OPERATOR: [oO] [pP] [eE] [rR] [aA] [tT] [oO] [rR];
    PG_OPTION: [oO] [pP] [tT] [iI] [oO] [nN];
    PG_OPTIONS: [oO] [pP] [tT] [iI] [oO] [nN] [sS];
    PG_ORDINALITY: [oO] [rR] [dD] [iI] [nN] [aA] [lL] [iI] [tT] [yY];
    PG_OTHERS: [oO] [tT] [hH] [eE] [rR] [sS];
    PG_OVER: [oO] [vV] [eE] [rR];
    PG_OVERRIDING: [oO] [vV] [eE] [rR] [rR] [iI] [dD] [iI] [nN] [gG];
    PG_OWNED: [oO] [wW] [nN] [eE] [dD];
    PG_OWNER: [oO] [wW] [nN] [eE] [rR];

    PG_PARALLEL: [pP] [aA] [rR] [aA] [lL] [lL] [eE] [lL];
    PG_PARSER: [pP] [aA] [rR] [sS] [eE] [rR];
    PG_PARTIAL: [pP] [aA] [rR] [tT] [iI] [aA] [lL];
    PG_PARTITION: [pP] [aA] [rR] [tT] [iI] [tT] [iI] [oO] [nN];
    PG_PASSING: [pP] [aA] [sS] [sS] [iI] [nN] [gG];
    PG_PASSWORD: [pP] [aA] [sS] [sS] [wW] [oO] [rR] [dD];
    PG_PLANS: [pP] [lL] [aA] [nN] [sS];
    PG_POLICY: [pP] [oO] [lL] [iI] [cC] [yY];
    PG_PRECEDING: [pP] [rR] [eE] [cC] [eE] [dD] [iI] [nN] [gG];
    PG_PREPARE: [pP] [rR] [eE] [pP] [aA] [rR] [eE];
    PG_PREPARED: [pP] [rR] [eE] [pP] [aA] [rR] [eE] [dD];
    PG_PRESERVE: [pP] [rR] [eE] [sS] [eE] [rR] [vV] [eE];
    PG_PRIOR: [pP] [rR] [iI] [oO] [rR];
    PG_PRIVILEGES: [pP] [rR] [iI] [vV] [iI] [lL] [eE] [gG] [eE] [sS];
    PG_PROCEDURAL: [pP] [rR] [oO] [cC] [eE] [dD] [uU] [rR] [aA] [lL];
    PG_PROCEDURE: [pP] [rR] [oO] [cC] [eE] [dD] [uU] [rR] [eE];
    PG_PROCEDURES: [pP] [rR] [oO] [cC] [eE] [dD] [uU] [rR] [eE] [sS];
    PG_PROGRAM: [pP] [rR] [oO] [gG] [rR] [aA] [mM];
    PG_PUBLICATION: [pP] [uU] [bB] [lL] [iI] [cC] [aA] [tT] [iI] [oO] [nN];

    PG_QUOTE: [qQ] [uU] [oO] [tT] [eE];

    PG_RANGE: [rR] [aA] [nN] [gG] [eE];
    PG_READ: [rR] [eE] [aA] [dD];
    PG_REASSIGN: [rR] [eE] [aA] [sS] [sS] [iI] [gG] [nN];
    PG_RECHECK: [rR] [eE] [cC] [hH] [eE] [cC] [kK];
    PG_RECURSIVE: [rR] [eE] [cC] [uU] [rR] [sS] [iI] [vV] [eE];
    PG_REF: [rR] [eE] [fF];
    PG_REFERENCING: [rR] [eE] [fF] [eE] [rR] [eE] [nN] [cC] [iI] [nN] [gG];
    PG_REFRESH: [rR] [eE] [fF] [rR] [eE] [sS] [hH];
    PG_REINDEX: [rR] [eE] [iI] [nN] [dD] [eE] [xX];
    PG_RELATIVE: [rR] [eE] [lL] [aA] [tT] [iI] [vV] [eE];
    PG_RELEASE: [rR] [eE] [lL] [eE] [aA] [sS] [eE];
    PG_RENAME: [rR] [eE] [nN] [aA] [mM] [eE];
    PG_REPEATABLE: [rR] [eE] [pP] [eE] [aA] [tT] [aA] [bB] [lL] [eE];
    PG_REPLACE: [rR] [eE] [pP] [lL] [aA] [cC] [eE];
    PG_REPLICA: [rR] [eE] [pP] [lL] [iI] [cC] [aA];
    PG_RESET: [rR] [eE] [sS] [eE] [tT];
    PG_RESTART: [rR] [eE] [sS] [tT] [aA] [rR] [tT];
    PG_RESTRICT: [rR] [eE] [sS] [tT] [rR] [iI] [cC] [tT];
    PG_RETURNS: [rR] [eE] [tT] [uU] [rR] [nN] [sS];
    PG_REVOKE: [rR] [eE] [vV] [oO] [kK] [eE];
    PG_ROLE: [rR] [oO] [lL] [eE];
    PG_ROLLBACK: [rR] [oO] [lL] [lL] [bB] [aA] [cC] [kK];
    PG_ROLLUP: [rR] [oO] [lL] [lL] [uU] [pP];
    PG_ROUTINE: [rR] [oO] [uU] [tT] [iI] [nN] [eE];
    PG_ROUTINES: [rR] [oO] [uU] [tT] [iI] [nN] [eE] [sS];
    PG_ROWS: [rR] [oO] [wW] [sS];
    PG_RULE: [rR] [uU] [lL] [eE];

    PG_SAVEPOINT: [sS] [aA] [vV] [eE] [pP] [oO] [iI] [nN] [tT];
    PG_SCHEMA: [sS] [cC] [hH] [eE] [mM] [aA];
    PG_SCHEMAS: [sS] [cC] [hH] [eE] [mM] [aA] [sS];
    PG_SCROLL: [sS] [cC] [rR] [oO] [lL] [lL];
    PG_SEARCH: [sS] [eE] [aA] [rR] [cC] [hH];
    PG_SECOND: [sS] [eE] [cC] [oO] [nN] [dD];
    PG_SECURITY: [sS] [eE] [cC] [uU] [rR] [iI] [tT] [yY];
    PG_SEQUENCE: [sS] [eE] [qQ] [uU] [eE] [nN] [cC] [eE];
    PG_SEQUENCES: [sS] [eE] [qQ] [uU] [eE] [nN] [cC] [eE] [sS];
    PG_SERIALIZABLE: [sS] [eE] [rR] [iI] [aA] [lL] [iI] [zZ] [aA] [bB] [lL] [eE];
    PG_SERVER: [sS] [eE] [rR] [vV] [eE] [rR];
    PG_SESSION: [sS] [eE] [sS] [sS] [iI] [oO] [nN];
    PG_SET: [sS] [eE] [tT];
    PG_SETS: [sS] [eE] [tT] [sS];
    PG_SHARE: [sS] [hH] [aA] [rR] [eE];
    PG_SHOW: [sS] [hH] [oO] [wW];
    PG_SIMPLE: [sS] [iI] [mM] [pP] [lL] [eE];
    // SKIP is reserved by ANTLR
    PG_SKIP_: [sS] [kK] [iI] [pP];
    PG_SNAPSHOT: [sS] [nN] [aA] [pP] [sS] [hH] [oO] [tT];
    PG_SQL: [sS] [qQ] [lL];
    PG_STABLE: [sS] [tT] [aA] [bB] [lL] [eE];
    PG_STANDALONE: [sS] [tT] [aA] [nN] [dD] [aA] [lL] [oO] [nN] [eE];
    PG_START: [sS] [tT] [aA] [rR] [tT];
    PG_STATEMENT: [sS] [tT] [aA] [tT] [eE] [mM] [eE] [nN] [tT];
    PG_STATISTICS: [sS] [tT] [aA] [tT] [iI] [sS] [tT] [iI] [cC] [sS];
    PG_STDIN: [sS] [tT] [dD] [iI] [nN];
    PG_STDOUT: [sS] [tT] [dD] [oO] [uU] [tT];
    PG_STORAGE: [sS] [tT] [oO] [rR] [aA] [gG] [eE];
    PG_STORED: [sS] [tT] [oO] [rR] [eE] [dD];
    PG_STRICT: [sS] [tT] [rR] [iI] [cC] [tT];
    PG_STRIP: [sS] [tT] [rR] [iI] [pP];
    PG_SUBSCRIPTION: [sS] [uU] [bB] [sS] [cC] [rR] [iI] [pP] [tT] [iI] [oO] [nN];
    PG_SUPPORT: [sS] [uU] [pP] [pP] [oO] [rR] [tT];
    PG_SYSID: [sS] [yY] [sS] [iI] [dD];
    PG_SYSTEM: [sS] [yY] [sS] [tT] [eE] [mM];

    PG_TABLES: [tT] [aA] [bB] [lL] [eE] [sS];
    PG_TABLESPACE: [tT] [aA] [bB] [lL] [eE] [sS] [pP] [aA] [cC] [eE];
    PG_TEMP: [tT] [eE] [mM] [pP];
    PG_TEMPLATE: [tT] [eE] [mM] [pP] [lL] [aA] [tT] [eE];
    PG_TEMPORARY: [tT] [eE] [mM] [pP] [oO] [rR] [aA] [rR] [yY];
    PG_TEXT: [tT] [eE] [xX] [tT];
    PG_TIES: [tT] [iI] [eE] [sS];
    PG_TRANSACTION: [tT] [rR] [aA] [nN] [sS] [aA] [cC] [tT] [iI] [oO] [nN];
    PG_TRANSFORM: [tT] [rR] [aA] [nN] [sS] [fF] [oO] [rR] [mM];
    PG_TRIGGER: [tT] [rR] [iI] [gG] [gG] [eE] [rR];
    PG_TRUNCATE: [tT] [rR] [uU] [nN] [cC] [aA] [tT] [eE];
    PG_TRUSTED: [tT] [rR] [uU] [sS] [tT] [eE] [dD];
    PG_TYPE: [tT] [yY] [pP] [eE];
    PG_TYPES: [tT] [yY] [pP] [eE] [sS];

    PG_UESCAPE: [uU] [eE] [sS] [cC] [aA] [pP] [eE];
    PG_UNBOUNDED: [uU] [nN] [bB] [oO] [uU] [nN] [dD] [eE] [dD];
    PG_UNCOMMITTED: [uU] [nN] [cC] [oO] [mM] [mM] [iI] [tT] [tT] [eE] [dD];
    PG_UNENCRYPTED: [uU] [nN] [eE] [nN] [cC] [rR] [yY] [pP] [tT] [eE] [dD];
    PG_UNKNOWN: [uU] [nN] [kK] [nN] [oO] [wW] [nN];
    PG_UNLISTEN: [uU] [nN] [lL] [iI] [sS] [tT] [eE] [nN];
    PG_UNLOGGED: [uU] [nN] [lL] [oO] [gG] [gG] [eE] [dD];
    PG_UNTIL: [uU] [nN] [tT] [iI] [lL];
    PG_UPDATE: [uU] [pP] [dD] [aA] [tT] [eE];

    PG_VACUUM: [vV] [aA] [cC] [uU] [uU] [mM];
    PG_VALID: [vV] [aA] [lL] [iI] [dD];
    PG_VALIDATE: [vV] [aA] [lL] [iI] [dD] [aA] [tT] [eE];
    PG_VALIDATOR: [vV] [aA] [lL] [iI] [dD] [aA] [tT] [oO] [rR];
    PG_VALUE: [vV] [aA] [lL] [uU] [eE];
    PG_VARYING: [vV] [aA] [rR] [yY] [iI] [nN] [gG];
    PG_VERSION: [vV] [eE] [rR] [sS] [iI] [oO] [nN];
    PG_VIEW: [vV] [iI] [eE] [wW];
    PG_VIEWS: [vV] [iI] [eE] [wW] [sS];
    PG_VOLATILE: [vV] [oO] [lL] [aA] [tT] [iI] [lL] [eE];

    PG_WHITESPACE: [wW] [hH] [iI] [tT] [eE] [sS] [pP] [aA] [cC] [eE];
    PG_WITHIN: [wW] [iI] [tT] [hH] [iI] [nN];
    PG_WITHOUT: [wW] [iI] [tT] [hH] [oO] [uU] [tT];
    PG_WORK: [wW] [oO] [rR] [kK];
    PG_WRAPPER: [wW] [rR] [aA] [pP] [pP] [eE] [rR];
    PG_WRITE: [wW] [rR] [iI] [tT] [eE];

    PG_XML: [xX] [mM] [lL];

    PG_YEAR: [yY] [eE] [aA] [rR];
    PG_YES: [yY] [eE] [sS];

    PG_ZONE: [zZ] [oO] [nN] [eE];

    /*
    ==================================================
    COL_NAME_KEYWORD
    ==================================================
    */

    PG_BETWEEN: [bB] [eE] [tT] [wW] [eE] [eE] [nN];
    PG_BIGINT: [bB] [iI] [gG] [iI] [nN] [tT];
    PG_BIT: [bB] [iI] [tT];
    PG_BOOLEAN: [bB] [oO] [oO] [lL] [eE] [aA] [nN];

    PG_CHAR: [cC] [hH] [aA] [rR];
    PG_CHARACTER: [cC] [hH] [aA] [rR] [aA] [cC] [tT] [eE] [rR];
    PG_COALESCE: [cC] [oO] [aA] [lL] [eE] [sS] [cC] [eE];

    PG_DEC: [dD] [eE] [cC];
    PG_DECIMAL: [dD] [eE] [cC] [iI] [mM] [aA] [lL];

    PG_EXISTS: [eE] [xX] [iI] [sS] [tT] [sS];
    PG_EXTRACT: [eE] [xX] [tT] [rR] [aA] [cC] [tT];

    PG_FLOAT: [fF] [lL] [oO] [aA] [tT];

    PG_GREATEST: [gG] [rR] [eE] [aA] [tT] [eE] [sS] [tT];
    PG_GROUPING: [gG] [rR] [oO] [uU] [pP] [iI] [nN] [gG];

    PG_INOUT: [iI] [nN] [oO] [uU] [tT];
    PG_INT: [iI] [nN] [tT];
    PG_INTEGER: [iI] [nN] [tT] [eE] [gG] [eE] [rR];
    PG_INTERVAL: [iI] [nN] [tT] [eE] [rR] [vV] [aA] [lL];

    PG_LEAST: [lL] [eE] [aA] [sS] [tT];

    PG_NATIONAL: [nN] [aA] [tT] [iI] [oO] [nN] [aA] [lL];
    PG_NCHAR: [nN] [cC] [hH] [aA] [rR];
    PG_NONE: [nN] [oO] [nN] [eE];
    PG_NORMALIZE: [nN] [oO] [rR] [mM] [aA] [lL] [iI] [zZ] [eE];
    PG_NULLIF: [nN] [uU] [lL] [lL] [iI] [fF];
    PG_NUMERIC: [nN] [uU] [mM] [eE] [rR] [iI] [cC];

    PG_OUT: [oO] [uU] [tT];
    PG_OVERLAY: [oO] [vV] [eE] [rR] [lL] [aA] [yY];

    PG_POSITION: [pP] [oO] [sS] [iI] [tT] [iI] [oO] [nN];
    PG_PRECISION: [pP] [rR] [eE] [cC] [iI] [sS] [iI] [oO] [nN];

    PG_REAL: [rR] [eE] [aA] [lL];
    PG_ROW: [rR] [oO] [wW];

    PG_SETOF: [sS] [eE] [tT] [oO] [fF];
    PG_SMALLINT: [sS] [mM] [aA] [lL] [lL] [iI] [nN] [tT];
    PG_SUBSTRING: [sS] [uU] [bB] [sS] [tT] [rR] [iI] [nN] [gG];

    PG_TIME: [tT] [iI] [mM] [eE];
    PG_TIMESTAMP: [tT] [iI] [mM] [eE] [sS] [tT] [aA] [mM] [pP];
    PG_TREAT: [tT] [rR] [eE] [aA] [tT];
    PG_TRIM: [tT] [rR] [iI] [mM];

    PG_VALUES: [vV] [aA] [lL] [uU] [eE] [sS];
    PG_VARCHAR: [vV] [aA] [rR] [cC] [hH] [aA] [rR];

    PG_XMLATTRIBUTES: [xX] [mM] [lL] [aA] [tT] [tT] [rR] [iI] [bB] [uU] [tT] [eE] [sS];
    PG_XMLCONCAT: [xX] [mM] [lL] [cC] [oO] [nN] [cC] [aA] [tT];
    PG_XMLELEMENT: [xX] [mM] [lL] [eE] [lL] [eE] [mM] [eE] [nN] [tT];
    PG_XMLEXISTS: [xX] [mM] [lL] [eE] [xX] [iI] [sS] [tT] [sS];
    PG_XMLFOREST: [xX] [mM] [lL] [fF] [oO] [rR] [eE] [sS] [tT];
    PG_XMLNAMESPACES: [xX] [mM] [lL] [nN] [aA] [mM] [eE] [sS] [pP] [aA] [cC] [eE] [sS];
    PG_XMLPARSE: [xX] [mM] [lL] [pP] [aA] [rR] [sS] [eE];
    PG_XMLPI: [xX] [mM] [lL] [pP] [iI];
    PG_XMLROOT: [xX] [mM] [lL] [rR] [oO] [oO] [tT];
    PG_XMLSERIALIZE: [xX] [mM] [lL] [sS] [eE] [rR] [iI] [aA] [lL] [iI] [zZ] [eE];
    PG_XMLTABLE: [xX] [mM] [lL] [tT] [aA] [bB] [lL] [eE];

    /*
    ==================================================
    TYPE_FUNC_NAME_KEYWORD
    ==================================================
    */

    PG_AUTHORIZATION: [aA] [uU] [tT] [hH] [oO] [rR] [iI] [zZ] [aA] [tT] [iI] [oO] [nN];

    PG_BINARY: [bB] [iI] [nN] [aA] [rR] [yY];

    PG_COLLATION: [cC] [oO] [lL] [lL] [aA] [tT] [iI] [oO] [nN];
    PG_CONCURRENTLY: [cC] [oO] [nN] [cC] [uU] [rR] [rR] [eE] [nN] [tT] [lL] [yY];
    PG_CROSS: [cC] [rR] [oO] [sS] [sS];
    PG_CURRENT_SCHEMA: [cC] [uU] [rR] [rR] [eE] [nN] [tT] PG_UNDERLINE  [sS] [cC] [hH] [eE] [mM] [aA];

    PG_FREEZE: [fF] [rR] [eE] [eE] [zZ] [eE];
    PG_FULL: [fF] [uU] [lL] [lL];

    PG_ILIKE: [iI] [lL] [iI] [kK] [eE];
    PG_INNER: [iI] [nN] [nN] [eE] [rR];
    PG_IS: [iI] [sS];
    PG_ISNULL: [iI] [sS] [nN] [uU] [lL] [lL];

    PG_JOIN: [jJ] [oO] [iI] [nN];

    PG_LEFT: [lL] [eE] [fF] [tT];
    PG_LIKE: [lL] [iI] [kK] [eE];

    PG_NATURAL: [nN] [aA] [tT] [uU] [rR] [aA] [lL];
    PG_NOTNULL: [nN] [oO] [tT] [nN] [uU] [lL] [lL];

    PG_OUTER: [oO] [uU] [tT] [eE] [rR];
    PG_OVERLAPS: [oO] [vV] [eE] [rR] [lL] [aA] [pP] [sS];

    PG_RIGHT: [rR] [iI] [gG] [hH] [tT];

    PG_SIMILAR: [sS] [iI] [mM] [iI] [lL] [aA] [rR];

    PG_TABLESAMPLE: [tT] [aA] [bB] [lL] [eE] [sS] [aA] [mM] [pP] [lL] [eE];

    PG_VERBOSE: [vV] [eE] [rR] [bB] [oO] [sS] [eE];

    /*
    ==================================================
    RESERVED_KEYWORD
    ==================================================
    */

    PG_ALL: [aA] [lL] [lL];   // first RESERVED_KEYWORD, sync with AntlrUtils.normalizeWhitespaceUnquoted
    PG_ANALYZE: [aA] [nN] [aA] [lL] [yY] [zZsS] [eE];
    PG_AND: [aA] [nN] [dD];
    PG_ANY: [aA] [nN] [yY];
    PG_ARRAY: [aA] [rR] [rR] [aA] [yY];
    PG_AS: [aA] [sS];
    PG_ASC: [aA] [sS] [cC];
    PG_ASYMMETRIC: [aA] [sS] [yY] [mM] [mM] [eE] [tT] [rR] [iI] [cC];

    PG_BOTH: [bB] [oO] [tT] [hH];

    PG_CASE: [cC] [aA] [sS] [eE];
    PG_CAST: [cC] [aA] [sS] [tT];
    PG_CHECK: [cC] [hH] [eE] [cC] [kK];
    PG_COLLATE: [cC] [oO] [lL] [lL] [aA] [tT] [eE];
    PG_COLUMN: [cC] [oO] [lL] [uU] [mM] [nN];
    PG_CONSTRAINT: [cC] [oO] [nN] [sS] [tT] [rR] [aA] [iI] [nN] [tT];
    PG_CREATE: [cC] [rR] [eE] [aA] [tT] [eE];
    PG_CURRENT_CATALOG: [cC] [uU] [rR] [rR] [eE] [nN] [tT] PG_UNDERLINE  [cC] [aA] [tT] [aA] [lL] [oO] [gG];
    PG_CURRENT_DATE: [cC] [uU] [rR] [rR] [eE] [nN] [tT] PG_UNDERLINE  [dD] [aA] [tT] [eE];
    PG_CURRENT_ROLE: [cC] [uU] [rR] [rR] [eE] [nN] [tT] PG_UNDERLINE  [rR] [oO] [lL] [eE];
    PG_CURRENT_TIME: [cC] [uU] [rR] [rR] [eE] [nN] [tT] PG_UNDERLINE  [tT] [iI] [mM] [eE];
    PG_CURRENT_TIMESTAMP: [cC] [uU] [rR] [rR] [eE] [nN] [tT] PG_UNDERLINE  [tT] [iI] [mM] [eE] [sS] [tT] [aA] [mM] [pP];
    PG_CURRENT_USER: [cC] [uU] [rR] [rR] [eE] [nN] [tT] PG_UNDERLINE  [uU] [sS] [eE] [rR];

    PG_DEFAULT: [dD] [eE] [fF] [aA] [uU] [lL] [tT];
    PG_DEFERRABLE: [dD] [eE] [fF] [eE] [rR] [rR] [aA] [bB] [lL] [eE];
    PG_DESC: [dD] [eE] [sS] [cC];
    PG_DISTINCT: [dD] [iI] [sS] [tT] [iI] [nN] [cC] [tT];
    PG_DO: [dD] [oO];

    PG_ELSE: [eE] [lL] [sS] [eE];
    PG_END: [eE] [nN] [dD];
    PG_EXCEPT: [eE] [xX] [cC] [eE] [pP] [tT];

    PG_FALSE: [fF] [aA] [lL] [sS] [eE];
    PG_FETCH: [fF] [eE] [tT] [cC] [hH];
    PG_FOR: [fF] [oO] [rR];
    PG_FOREIGN: [fF] [oO] [rR] [eE] [iI] [gG] [nN];
    PG_FROM: [fF] [rR] [oO] [mM];

    PG_GRANT: [gG] [rR] [aA] [nN] [tT];
    PG_GROUP: [gG] [rR] [oO] [uU] [pP];

    PG_HAVING: [hH] [aA] [vV] [iI] [nN] [gG];

    PG_IN: [iI] [nN];
    PG_INITIALLY: [iI] [nN] [iI] [tT] [iI] [aA] [lL] [lL] [yY];
    PG_INTERSECT: [iI] [nN] [tT] [eE] [rR] [sS] [eE] [cC] [tT];
    PG_INTO: [iI] [nN] [tT] [oO];

    PG_LATERAL: [lL] [aA] [tT] [eE] [rR] [aA] [lL];
    PG_LEADING: [lL] [eE] [aA] [dD] [iI] [nN] [gG];
    PG_LIMIT: [lL] [iI] [mM] [iI] [tT];
    PG_LOCALTIME: [lL] [oO] [cC] [aA] [lL] [tT] [iI] [mM] [eE];
    PG_LOCALTIMESTAMP: [lL] [oO] [cC] [aA] [lL] [tT] [iI] [mM] [eE] [sS] [tT] [aA] [mM] [pP];

    PG_NOT: [nN] [oO] [tT];
    PG_NULL: [nN] [uU] [lL] [lL];


    PG_MERGE: [mM] [eE] [rR] [gG] [eE];

    PG_OFFSET: [oO] [fF] [fF] [sS] [eE] [tT];
    PG_ON: [oO] [nN];
    PG_ONLY: [oO] [nN] [lL] [yY];
    PG_OR: [oO] [rR];
    PG_ORDER: [oO] [rR] [dD] [eE] [rR];

    PG_PLACING: [pP] [lL] [aA] [cC] [iI] [nN] [gG];
    PG_PRIMARY: [pP] [rR] [iI] [mM] [aA] [rR] [yY];

    PG_REFERENCES: [rR] [eE] [fF] [eE] [rR] [eE] [nN] [cC] [eE] [sS];
    PG_RETURNING: [rR] [eE] [tT] [uU] [rR] [nN] [iI] [nN] [gG];

    PG_SELECT: [sS] [eE] [lL] [eE] [cC] [tT];
    PG_SESSION_USER: [sS] [eE] [sS] [sS] [iI] [oO] [nN] PG_UNDERLINE  [uU] [sS] [eE] [rR];
    PG_SOME: [sS] [oO] [mM] [eE];
    PG_SYMMETRIC: [sS] [yY] [mM] [mM] [eE] [tT] [rR] [iI] [cC];

    PG_TABLE: [tT] [aA] [bB] [lL] [eE];
    PG_THEN: [tT] [hH] [eE] [nN];
    PG_TO: [tT] [oO];
    PG_TRAILING: [tT] [rR] [aA] [iI] [lL] [iI] [nN] [gG];
    PG_TRUE: [tT] [rR] [uU] [eE];

    PG_UNION: [uU] [nN] [iI] [oO] [nN];
    PG_UNIQUE: [uU] [nN] [iI] [qQ] [uU] [eE];
    PG_USER: [uU] [sS] [eE] [rR];
    PG_USING: [uU] [sS] [iI] [nN] [gG];

    PG_VARIADIC: [vV] [aA] [rR] [iI] [aA] [dD] [iI] [cC];

    PG_WHEN: [wW] [hH] [eE] [nN];
    PG_WHERE: [wW] [hH] [eE] [rR] [eE];
    PG_WINDOW: [wW] [iI] [nN] [dD] [oO] [wW];
    PG_WITH: [wW] [iI] [tT] [hH];   // last RESERVED_KEYWORD, sync with AntlrUtils.normalizeWhitespaceUnquoted

    /*
     * Other tokens.
     * Some sql words/data types are not keywords but we need a token to be able to parse them.
     */

    PG_ALIGNMENT: [aA] [lL] [iI] [gG] [nN] [mM] [eE] [nN] [tT];
    PG_ALLOW_CONNECTIONS: [aA] [lL] [lL] [oO] [wW] PG_UNDERLINE [cC] [oO] [nN] [nN] [eE] [cC] [tT] [iI] [oO] [nN] [sS];

    PG_BASETYPE: [bB] [aA] [sS] [eE] [tT] [yY] [pP] [eE];
    PG_BUFFERS: [bB] [uU] [fF] [fF] [eE] [rR] [sS];
    PG_BYPASSRLS: [bB] [yY] [pP] [aA] [sS] [sS] [rR] [lL] [sS];

    PG_CANONICAL: [cC] [aA] [nN] [oO] [nN] [iI] [cC] [aA] [lL];
    PG_CATEGORY: [cC] [aA] [tT] [eE] [gG] [oO] [rR] [yY];
    PG_COLLATABLE: [cC] [oO] [lL] [lL] [aA] [tT] [aA] [bB] [lL] [eE];
    PG_COMBINEFUNC: [cC] [oO] [mM] [bB] [iI] [nN] [eE] [fF] [uU] [nN] [cC];
    PG_COMMUTATOR: [cC] [oO] [mM] [mM] [uU] [tT] [aA] [tT] [oO] [rR];
    PG_CONNECT: [cC] [oO] [nN] [nN] [eE] [cC] [tT];
    PG_COSTS: [cC] [oO] [sS] [tT] [sS];
    PG_CREATEDB: [cC] [rR] [eE] [aA] [tT] [eE] [dD] [bB];
    PG_CREATEROLE: [cC] [rR] [eE] [aA] [tT] [eE] [rR] [oO] [lL] [eE];

    PG_DESERIALFUNC: [dD] [eE] [sS] [eE] [rR] [iI] [aA] [lL] [fF] [uU] [nN] [cC];
    PG_DETERMINISTIC: [dD] [eE] [tT] [eE] [rR] [mM] [iI] [nN] [iI] [sS] [tT] [iI] [cC];
    PG_DISABLE_PAGE_SKIPPING: PG_DISABLE PG_UNDERLINE [pP] [aA] [gG] [eE] PG_UNDERLINE [sS] [kK] [iI] [pP] [pP] [iI] [nN] [gG];

    PG_ELEMENT: [eE] [lL] [eE] [mM] [eE] [nN] [tT];
    PG_EXTENDED: [eE] [xX] [tT] [eE] [nN] [dD] [eE] [dD];

    PG_FINALFUNC: [fF] [iI] [nN] [aA] [lL] [fF] [uU] [nN] [cC];
    PG_FINALFUNC_EXTRA: PG_FINALFUNC PG_UNDERLINE  [eE] [xX] [tT] [rR] [aA];
    PG_FINALFUNC_MODIFY: PG_FINALFUNC PG_UNDERLINE [mM] [oO] [dD] [iI] [fF] [yY];
    PG_FORCE_NOT_NULL: [fF] [oO] [rR] [cC] [eE] PG_UNDERLINE [nN] [oO] [tT] PG_UNDERLINE [nN] [uU] [lL] [lL];
    PG_FORCE_NULL: [fF] [oO] [rR] [cC] [eE] PG_UNDERLINE [nN] [uU] [lL] [lL];
    PG_FORCE_QUOTE: [fF] [oO] [rR] [cC] [eE] PG_UNDERLINE [qQ] [uU] [oO] [tT] [eE];
    PG_FORMAT: [fF] [oO] [rR] [mM] [aA] [tT];

    PG_GETTOKEN: [gG] [eE] [tT] [tT] [oO] [kK] [eE] [nN];

    PG_HASH: [hH] [aA] [sS] [hH];
    PG_HASHES: [hH] [aA] [sS] [hH] [eE] [sS];
    PG_HEADLINE: [hH] [eE] [aA] [dD] [lL] [iI] [nN] [eE];
    PG_HYPOTHETICAL: [hH] [yY] [pP] [oO] [tT] [hH] [eE] [tT] [iI] [cC] [aA] [lL];

    PG_INDEX_CLEANUP: [iI] [nN] [dD] [eE] [xX] PG_UNDERLINE [cC] [lL] [eE] [aA] [nN] [uU] [pP];
    PG_INIT: [iI] [nN] [iI] [tT];
    PG_INITCOND: [iI] [nN] [iI] [tT] [cC] [oO] [nN] [dD];
    PG_INTERNALLENGTH: [iI] [nN] [tT] [eE] [rR] [nN] [aA] [lL] [lL] [eE] [nN] [gG] [tT] [hH];
    PG_IS_TEMPLATE: [iI] [sS] PG_UNDERLINE [tT] [eE] [mM] [pP] [lL] [aA] [tT] [eE];

    PG_JSON: [jJ] [sS] [oO] [nN];

    PG_LC_COLLATE: [lL] [cC] PG_UNDERLINE [cC] [oO] [lL] [lL] [aA] [tT] [eE];
    PG_LC_CTYPE: [lL] [cC] PG_UNDERLINE [cC] [tT] [yY] [pP] [eE];
    PG_LEFTARG: [lL] [eE] [fF] [tT] [aA] [rR] [gG];
    PG_LEXIZE: [lL] [eE] [xX] [iI] [zZ] [eE];
    PG_LEXTYPES: [lL] [eE] [xX] [tT] [yY] [pP] [eE] [sS];
    PG_LIST: [lL] [iI] [sS] [tT];
    PG_LOCALE: [lL] [oO] [cC] [aA] [lL] [eE];
    PG_LOGIN: [lL] [oO] [gG] [iI] [nN];

    PG_MAIN: [mM] [aA] [iI]  [nN];
    PG_MERGES: [mM] [eE] [rR] [gG] [eE] [sS];
    PG_MFINALFUNC: [mM] [fF] [iI] [nN] [aA] [lL] [fF] [uU] [nN] [cC];
    PG_MFINALFUNC_EXTRA: PG_MFINALFUNC  PG_UNDERLINE [eE] [xX] [tT] [rR] [aA];
    PG_MFINALFUNC_MODIFY: PG_MFINALFUNC  PG_UNDERLINE [mM] [oO] [dD] [iI] [fF] [yY];
    PG_MINITCOND: [mM] [iI] [nN] [iI] [tT] [cC] [oO] [nN] [dD];
    PG_MINVFUNC: [mM] [iI] [nN] [vV] [fF] [uU] [nN] [cC];
    PG_MODULUS: [mM] [oO] [dD] [uU] [lL] [uU] [sS];
    PG_MSFUNC: [mM] [sS] [fF] [uU] [nN] [cC];
    PG_MSSPACE: [mM] [sS] [sS] [pP] [aA] [cC] [eE];
    PG_MSTYPE: [mM] [sS] [tT] [yY] [pP] [eE];

    PG_NEGATOR: [nN] [eE] [gG] [aA] [tT] [oO] [rR];
    PG_NOBYPASSRLS: [nN] [oO] [bB] [yY] [pP] [aA] [sS] [sS] [rR] [lL] [sS];
    PG_NOCREATEDB: [nN] [oO] [cC] [rR] [eE] [aA] [tT] [eE] [dD] [bB];
    PG_NOCREATEROLE: [nN] [oO] [cC] [rR] [eE] [aA] [tT] [eE] [rR] [oO] [lL] [eE];
    PG_NOINHERIT: [nN] [oO] [iI] [nN] [hH] [eE] [rR] [iI] [tT];
    PG_NOLOGIN: [nN] [oO] [lL] [oO] [gG] [iI] [nN];
    PG_NOREPLICATION: [nN] [oO] [rR] [eE] [pP] [lL] [iI] [cC] [aA] [tT] [iI] [oO] [nN];
    PG_NOSUPERUSER: [nN] [oO] [sS] [uU] [pP] [eE] [rR] [uU] [sS] [eE] [rR];

    PG_OUTPUT: [oO] [uU] [tT] [pP] [uU] [tT];

    PG_PASSEDBYVALUE: [pP] [aA] [sS] [sS] [eE] [dD] [bB] [yY] [vV] [aA] [lL] [uU] [eE];
    PG_PATH: [pP] [aA] [tT] [hH];
    PG_PERMISSIVE: [pP] [eE] [rR] [mM] [iI] [sS] [sS] [iI] [vV] [eE];
    PG_PLAIN: [pP] [lL] [aA] [iI]  [nN];
    PG_PREFERRED: [pP] [rR] [eE] [fF] [eE] [rR] [rR] [eE] [dD];
    PG_PROVIDER: [pP] [rR] [oO] [vV] [iI] [dD] [eE] [rR];

    PG_READ_ONLY: PG_READ PG_UNDERLINE PG_ONLY;
    PG_READ_WRITE: PG_READ PG_UNDERLINE PG_WRITE;
    PG_RECEIVE: [rR] [eE] [cC] [eE] [iI] [vV] [eE];
    PG_REMAINDER: [rR] [eE] [mM] [aA] [iI] [nN] [dD] [eE] [rR];
    PG_REPLICATION: [rR] [eE] [pP] [lL] [iI] [cC] [aA] [tT] [iI] [oO] [nN];
    PG_RESTRICTED: [rR] [eE] [sS] [tT] [rR] [iI] [cC] [tT] [eE] [dD];
    PG_RESTRICTIVE: [rR] [eE] [sS] [tT] [rR] [iI] [cC] [tT] [iI] [vV] [eE];
    PG_RIGHTARG: [rR] [iI] [gG] [hH] [tT] [aA] [rR] [gG];

    PG_SAFE: [sS] [aA] [fF] [eE];
    PG_SEND: [sS] [eE] [nN] [dD];
    PG_SERIALFUNC: [sS] [eE] [rR] [iI] [aA] [lL] [fF] [uU] [nN] [cC];
    PG_SETTINGS: [sS] [eE] [tT] [tT] [iI] [nN] [gG] [sS];
    PG_SFUNC: [sS] [fF] [uU] [nN] [cC];
    PG_SHAREABLE: [sS] [hH] [aA] [rR] [eE] [aA] [bB] [lL] [eE];
    PG_SKIP_LOCKED: [sS] [kK] [iI] [pP] PG_UNDERLINE [lL] [oO] [cC] [kK] [eE] [dD];
    PG_SORTOP: [sS] [oO] [rR] [tT] [oO] [pP];
    PG_SSPACE: [sS] [sS] [pP] [aA] [cC] [eE];
    PG_STYPE: [sS] [tT] [yY] [pP] [eE];
    PG_SUBTYPE_DIFF: [sS] [uU] [bB] [tT] [yY] [pP] [eE] PG_UNDERLINE [dD] [iI] [fF] [fF];
    PG_SUBTYPE_OPCLASS: [sS] [uU] [bB] [tT] [yY] [pP] [eE] PG_UNDERLINE [oO] [pP] [cC] [lL] [aA] [sS] [sS];
    PG_SUBTYPE: [sS] [uU] [bB] [tT] [yY] [pP] [eE];
    PG_SUMMARY: [sS] [uU] [mM] [mM] [aA] [rR] [yY];
    PG_SUPERUSER: [sS] [uU] [pP] [eE] [rR] [uU] [sS] [eE] [rR];

    PG_TIMING: [tT] [iI] [mM] [iI] [nN] [gG];
    PG_TYPMOD_IN: [tT] [yY] [pP] [mM] [oO] [dD] PG_UNDERLINE [iI]  [nN];
    PG_TYPMOD_OUT: [tT] [yY] [pP] [mM] [oO] [dD] PG_UNDERLINE [oO] [uU] [tT];

    PG_UNSAFE: [uU] [nN] [sS] [aA] [fF] [eE];
    PG_USAGE: [uU] [sS] [aA] [gG] [eE];

    PG_VARIABLE: [vV] [aA] [rR] [iI] [aA] [bB] [lL] [eE];

    PG_WAL: [wW] [aA] [lL];

    PG_YAML: [yY] [aA] [mM] [lL];

    // plpgsql tokens

    PG_ALIAS: [aA] [lL] [iI] [aA] [sS];
    PG_ASSERT: [aA] [sS] [sS] [eE] [rR] [tT];

    PG_CONSTANT: [cC] [oO] [nN] [sS] [tT] [aA] [nN] [tT];

    PG_DATATYPE: [dD] [aA] [tT] [aA] [tT] [yY] [pP] [eE];
    PG_DEBUG: [dD] [eE] [bB] [uU] [gG];
    PG_DETAIL: [dD] [eE] [tT] [aA] [iI] [lL];
    PG_DIAGNOSTICS: [dD] [iI] [aA] [gG] [nN] [oO] [sS] [tT] [iI] [cC] [sS];

    PG_ELSEIF: [eE] [lL] [sS] [eE] [iI] [fF];
    PG_ELSIF: [eE] [lL] [sS] [iI] [fF];
    PG_ERRCODE: [eE] [rR] [rR] [cC] [oO] [dD] [eE];
    PG_EXIT: [eE] [xX] [iI] [tT];
    PG_EXCEPTION: [eE] [xX] [cC] [eE] [pP] [tT] [iI] [oO] [nN];

    PG_FOREACH: [fF] [oO] [rR] [eE] [aA] [cC] [hH];

    PG_GET: [gG] [eE] [tT];

    PG_HINT: [hH] [iI] [nN] [tT];

    PG_INFO: [iI] [nN] [fF] [oO];

    PG_LOG: [lL] [oO] [gG];
    PG_LOOP: [lL] [oO] [oO] [pP];

    PG_MESSAGE: [mM] [eE] [sS] [sS] [aA] [gG] [eE];

    PG_NOTICE: [nN] [oO] [tT] [iI] [cC] [eE];

    PG_OPEN: [oO] [pP] [eE] [nN];

    PG_PERFORM: [pP] [eE] [rR] [fF] [oO] [rR] [mM];

    PG_QUERY: [qQ] [uU] [eE] [rR] [yY];

    PG_RAISE: [rR] [aA] [iI] [sS] [eE];
    PG_RECORD: [rR] [eE] [cC] [oO] [rR] [dD];
    PG_RETURN: [rR] [eE] [tT] [uU] [rR] [nN];
    PG_REVERSE: [rR] [eE] [vV] [eE] [rR] [sS] [eE];
    PG_ROWTYPE: [rR] [oO] [wW] [tT] [yY] [pP] [eE];

    PG_SLICE: [sS] [lL] [iI] [cC] [eE];
    PG_SQLSTATE: [sS] [qQ] [lL] [sS] [tT] [aA] [tT] [eE];
    PG_STACKED: [sS] [tT] [aA] [cC] [kK] [eE] [dD];

    PG_WARNING: [wW] [aA] [rR] [nN] [iI] [nN] [gG];
    PG_WHILE: [wW] [hH] [iI] [lL] [eE];     // last identifier rule, sync with CustomSQLAntlrErrorStrategy & AntlrUtils

    AG_GRAPH: [gG] [rR] [aA] [pP] [hH];
    AG_VLABEL: [vV] [lL] [aA] [bB] [eE] [lL];
    AG_ELABEL: [eE] [lL] [aA] [bB] [eE] [Ll];

    REDUCE: [rR] [eE] [dD] [uU] [cC] [eE];
    REMOVE: [rR] [eE] [mM] [oO] [vV] [eE];
    SHORTESTPATH: [sS] [hH] [oO] [rR] [tT] [eE] [sS] [tT] [pP] [aA] [tT] [hH];
    SINGLE: [sS] [iI] [nN] [gG] [lL] [eE];
    STARTS: [sS] [tT] [aA] [rR] [tT] [sS];
    UNWIND: [uU] [nN] [wW] [iI] [nN] [dD];
    XOR: [xX] [oO] [rR];
    YIELD: [yY] [iI] [eE] [lL] [dD];

fragment PG_UNDERLINE : '_';

// Operators

// Cast Operator
PG_CAST_EXPRESSION : ':' ':';   // first operator rule, sync with CustomSQLAntlrErrorStrategy

PG_EQUAL : '=';
PG_COLON :  ':';
PG_SEMI_COLON :  ';';
PG_COMMA : ',';
PG_NOT_EQUAL : '<>' | '!=';
PG_LTH : '<';
PG_LEQ : '<=';
PG_GTH : '>';
PG_GEQ : '>=';
PG_LEFT_PAREN :  '(';
PG_RIGHT_PAREN : ')';
PG_PLUS  : '+';
PG_MINUS : '-';
PG_MULTIPLY: '*';
PG_DIVIDE  : '/';
PG_MODULAR : '%';
PG_EXP : '^';

PG_DOT : '.';
PG_QUOTE_CHAR : '\'';
PG_DOUBLE_QUOTE : '"';
PG_DOLLAR : '$';
BRACKET_OPEN: '{';
BRACKET_CLOSE: '}';
PG_LEFT_BRACKET : '[';
PG_RIGHT_BRACKET : ']';

PG_EQUAL_GTH : '=>';
PG_COLON_EQUAL : ':=';

PG_LESS_LESS : '<<';
PG_GREATER_GREATER : '>>';
PG_DOUBLE_DOT: '..';
PG_HASH_SIGN: '#';              // last operator rule, sync with CustomSQLAntlrErrorStrategy

PLUS_EQUAL: '+=';
CHAR_OR: '|';
ALMOST_EQUAL: '=~';

PG_BlockComment
    :   '/*' (PG_BlockComment |.)*? '*/' -> channel(HIDDEN)
    ;

PG_LineComment
    :   '--' ~[\r\n]* -> channel(HIDDEN)
    ;

// must follow all explicitly defined operators and comments
// so that they are matched first
PG_OP_CHARS
    // may not end with + or -
    : PG_OperatorBasic+ PG_OperatorBasicEnd
    // may end with any character but must include at least one of OperatorSpecial
    | (PG_OperatorBasic | PG_OperatorSpecial)* PG_OperatorSpecial (PG_OperatorBasic | PG_OperatorSpecial)*
    ;

fragment
PG_OperatorBasic
    : [+*<>=]
    // check so that comment start sequences are not matched by this
    | '-' {this._input.LA(1) !== '-'}?
    | '/' {this._input.LA(1) !== '*'}?;
fragment
PG_OperatorBasicEnd: [*/<>=];
fragment
PG_OperatorSpecial: [~!@#%^&|`?];

PG_NUMBER_LITERAL : PG_Digit+;

fragment
PG_Digit : '0'..'9';

PG_REAL_NUMBER
    // fail double dots into a separate token
    // otherwise 1..10 would lex into 2 numbers
    :   PG_Digit+ '.' {this._input.LA(1) !== '.'}?
    |   PG_Digit+ '.' PG_Digit+ PG_EXPONENT?
    |   PG_Digit+ '.' PG_EXPONENT
    |   '.' PG_Digit+ PG_EXPONENT?
    |   PG_Digit+ PG_EXPONENT
    ;

PG_DOLLAR_NUMBER
    : PG_DOLLAR PG_NUMBER_LITERAL
    ;

/*
===============================================================================
 Identifiers
===============================================================================
*/

PG_Identifier
    : PG_IdentifierStartChar PG_IdentifierChar*
    ;
fragment
PG_IdentifierStartChar
    : // these are the valid identifier start characters below 0x7F
    [a-zA-Z_]
    | // these are the valid characters from 0x80 to 0xFF
    [\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF]
    | // these are the letters above 0xFF which only need a single UTF-16 code unit
    [\u0100-\uD7FF\uE000-\uFFFF] {this.isLetter(String.fromCharCode(this._input.LA(-1)))}?
    | // letters which require multiple UTF-16 code units
    [\uD800-\uDBFF] [\uDC00-\uDFFF] {this.isLetter(String.fromCharCode(this._input.LA(-2), this._input.LA(-1)))}?
    ;
fragment
PG_IdentifierChar
    : PG_StrictIdentifierChar
    | '$'
    ;
fragment
PG_StrictIdentifierChar
    : PG_IdentifierStartChar
    | [0-9]
    ;

/* Quoted Identifiers
*
* These are divided into four separate tokens, allowing distinction of valid quoted identifiers from invalid quoted
* identifiers without sacrificing the ability of the lexer to reliably recover from lexical errors in the input.
*/
PG_QuotedIdentifier
    : PG_UnterminatedQuotedIdentifier '"'
    ;
// This is a quoted identifier which only contains valid characters but is not terminated
fragment PG_UnterminatedQuotedIdentifier
    : '"'
    ( '""' | ~[\u0000"] )*
    ;
/*
===============================================================================
 Literal
===============================================================================
*/

// Some Unicode Character Ranges
fragment
PG_Control_Characters                  :   '\u0001' .. '\u0008' | '\u000B' | '\u000C' | '\u000E' .. '\u001F';
fragment
PG_Extended_Control_Characters         :   '\u0080' .. '\u009F';

PG_Character_String_Literal
    : [eEnNxXbB]? PG_Single_String (PG_String_Joiner PG_Single_String)*
    ;

fragment
PG_Single_String
    : PG_QUOTE_CHAR ( ~'\'' | '\'\'')* PG_QUOTE_CHAR
    ;

fragment
PG_String_Joiner
    :  ((PG_Space | PG_Tab | PG_White_Space | PG_LineComment)* PG_New_Line)+ (PG_Space | PG_Tab | PG_White_Space)*
    ;

fragment
PG_EXPONENT : ('e'|'E') ('+'|'-')? PG_Digit+ ;

// Dollar-quoted String Constants (§4.1.2.4)
PG_BeginDollarStringConstant
    : '$' PG_Tag? '$' -> pushMode(PG_DollarQuotedStringMode)
    ;

fragment
PG_Tag
    : PG_IdentifierStartChar PG_StrictIdentifierChar*
    ;


/*
===============================================================================
 Whitespace Tokens
===============================================================================
*/

PG_Space
  : ' ' -> channel(HIDDEN)
  ;

PG_White_Space
  : ( PG_Control_Characters  | PG_Extended_Control_Characters )+ -> channel(HIDDEN)
  ;

PG_New_Line
    : ('\u000D' | '\u000D'? '\u000A') -> channel(HIDDEN)
    ;

PG_Tab
    : '\u0009' -> channel(HIDDEN)
    ;

PG_BOM: '\ufeff';

PG_BAD
  : .
  ;

mode PG_DollarQuotedStringMode;
PG_Text_between_Dollar
   : ~'$'+
    | // this alternative improves the efficiency of handling $ characters within a dollar-quoted string which are
    // not part of the ending tag.
    '$' ~'$'*
    ;

PG_EndDollarStringConstant
    : '$' PG_Tag? '$' -> popMode
    ;

